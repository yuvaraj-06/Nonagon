{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Covalent-1","provenance":[],"collapsed_sections":[],"mount_file_id":"1vOwTjX88Hmw6FRPU_7qtm8V1qLCLk9vq","authorship_tag":"ABX9TyMr7JkLA6n2TiC01iTgIhbj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rVGQZVp5vljN"},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["a=pd.read_csv(\"Covalent.csv\")"],"metadata":{"id":"agrs4hpMvr5a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"23zuq13aN5hB","executionInfo":{"status":"ok","timestamp":1661585567714,"user_tz":-330,"elapsed":448,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"e6765959-b7ae-4886-d6ec-c1f4b4c97f22"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        block_signed_at  block_height  \\\n","0  2022-08-05T09:25:37Z      15281476   \n","1  2022-08-04T23:55:48Z      15278912   \n","2  2022-08-04T23:55:48Z      15278912   \n","3  2022-08-04T23:55:48Z      15278912   \n","4  2022-08-04T23:55:48Z      15278912   \n","\n","                                             tx_hash  tx_offset  successful  \\\n","0  0x9bab055bc96ea0994a5380bf3fa277a973c4663a6103...        178       False   \n","1  0x7d1643697dbe5bbfaea6133b17650d1c0fc408d90244...         71        True   \n","2  0x7d1643697dbe5bbfaea6133b17650d1c0fc408d90244...         71        True   \n","3  0x7d1643697dbe5bbfaea6133b17650d1c0fc408d90244...         71        True   \n","4  0x7d1643697dbe5bbfaea6133b17650d1c0fc408d90244...         71        True   \n","\n","                                 from_address from_address_label  \\\n","0  0xa79e63e78eec28741e711f89a672a4c40876ebf3                NaN   \n","1  0xa79e63e78eec28741e711f89a672a4c40876ebf3                NaN   \n","2  0xa79e63e78eec28741e711f89a672a4c40876ebf3                NaN   \n","3  0xa79e63e78eec28741e711f89a672a4c40876ebf3                NaN   \n","4  0xa79e63e78eec28741e711f89a672a4c40876ebf3                NaN   \n","\n","                                   to_address         to_address_label  value  \\\n","0  0xdef1c0ded9bec7f1a1670819833240f027b25eff                      NaN      0   \n","1  0xf4d2888d29d722226fafa5d9b24f9164c092421e  LooksRare Token (LOOKS)      0   \n","2  0xf4d2888d29d722226fafa5d9b24f9164c092421e  LooksRare Token (LOOKS)      0   \n","3  0xf4d2888d29d722226fafa5d9b24f9164c092421e  LooksRare Token (LOOKS)      0   \n","4  0xf4d2888d29d722226fafa5d9b24f9164c092421e  LooksRare Token (LOOKS)      0   \n","\n","   ...  log_events_decoded_params_type  log_events_decoded_params_indexed  \\\n","0  ...                             NaN                                NaN   \n","1  ...                         address                               True   \n","2  ...                         address                               True   \n","3  ...                         uint256                              False   \n","4  ...                             NaN                                NaN   \n","\n","   log_events_decoded_params_decoded  \\\n","0                                NaN   \n","1                               True   \n","2                               True   \n","3                               True   \n","4                                NaN   \n","\n","                     log_events_decoded_params_value  \\\n","0                                                NaN   \n","1         0xa79e63e78eec28741e711f89a672a4c40876ebf3   \n","2         0xdef1c0ded9bec7f1a1670819833240f027b25eff   \n","3  1157920892373161954235709850086879078532699846...   \n","4                                                NaN   \n","\n","   log_events_decoded_params_value_value  \\\n","0                                    NaN   \n","1                                    NaN   \n","2                                    NaN   \n","3                                    NaN   \n","4                                    NaN   \n","\n","   log_events_decoded_params_value_bitSize  \\\n","0                                      NaN   \n","1                                      NaN   \n","2                                      NaN   \n","3                                      NaN   \n","4                                      NaN   \n","\n","   log_events_decoded_params_value_typeAsString log_events_raw_log_topics_3  \\\n","0                                           NaN                         NaN   \n","1                                           NaN                         NaN   \n","2                                           NaN                         NaN   \n","3                                           NaN                         NaN   \n","4                                           NaN                         NaN   \n","\n","   log_events_decoded  log_events_decoded_params  \n","0                 NaN                        NaN  \n","1                 NaN                        NaN  \n","2                 NaN                        NaN  \n","3                 NaN                        NaN  \n","4                 NaN                        NaN  \n","\n","[5 rows x 45 columns]"],"text/html":["\n","  <div id=\"df-346bb4eb-4e24-47be-84f0-0751aa6fe198\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>block_signed_at</th>\n","      <th>block_height</th>\n","      <th>tx_hash</th>\n","      <th>tx_offset</th>\n","      <th>successful</th>\n","      <th>from_address</th>\n","      <th>from_address_label</th>\n","      <th>to_address</th>\n","      <th>to_address_label</th>\n","      <th>value</th>\n","      <th>...</th>\n","      <th>log_events_decoded_params_type</th>\n","      <th>log_events_decoded_params_indexed</th>\n","      <th>log_events_decoded_params_decoded</th>\n","      <th>log_events_decoded_params_value</th>\n","      <th>log_events_decoded_params_value_value</th>\n","      <th>log_events_decoded_params_value_bitSize</th>\n","      <th>log_events_decoded_params_value_typeAsString</th>\n","      <th>log_events_raw_log_topics_3</th>\n","      <th>log_events_decoded</th>\n","      <th>log_events_decoded_params</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022-08-05T09:25:37Z</td>\n","      <td>15281476</td>\n","      <td>0x9bab055bc96ea0994a5380bf3fa277a973c4663a6103...</td>\n","      <td>178</td>\n","      <td>False</td>\n","      <td>0xa79e63e78eec28741e711f89a672a4c40876ebf3</td>\n","      <td>NaN</td>\n","      <td>0xdef1c0ded9bec7f1a1670819833240f027b25eff</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-08-04T23:55:48Z</td>\n","      <td>15278912</td>\n","      <td>0x7d1643697dbe5bbfaea6133b17650d1c0fc408d90244...</td>\n","      <td>71</td>\n","      <td>True</td>\n","      <td>0xa79e63e78eec28741e711f89a672a4c40876ebf3</td>\n","      <td>NaN</td>\n","      <td>0xf4d2888d29d722226fafa5d9b24f9164c092421e</td>\n","      <td>LooksRare Token (LOOKS)</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>address</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>0xa79e63e78eec28741e711f89a672a4c40876ebf3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2022-08-04T23:55:48Z</td>\n","      <td>15278912</td>\n","      <td>0x7d1643697dbe5bbfaea6133b17650d1c0fc408d90244...</td>\n","      <td>71</td>\n","      <td>True</td>\n","      <td>0xa79e63e78eec28741e711f89a672a4c40876ebf3</td>\n","      <td>NaN</td>\n","      <td>0xf4d2888d29d722226fafa5d9b24f9164c092421e</td>\n","      <td>LooksRare Token (LOOKS)</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>address</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>0xdef1c0ded9bec7f1a1670819833240f027b25eff</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022-08-04T23:55:48Z</td>\n","      <td>15278912</td>\n","      <td>0x7d1643697dbe5bbfaea6133b17650d1c0fc408d90244...</td>\n","      <td>71</td>\n","      <td>True</td>\n","      <td>0xa79e63e78eec28741e711f89a672a4c40876ebf3</td>\n","      <td>NaN</td>\n","      <td>0xf4d2888d29d722226fafa5d9b24f9164c092421e</td>\n","      <td>LooksRare Token (LOOKS)</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>uint256</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>1157920892373161954235709850086879078532699846...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2022-08-04T23:55:48Z</td>\n","      <td>15278912</td>\n","      <td>0x7d1643697dbe5bbfaea6133b17650d1c0fc408d90244...</td>\n","      <td>71</td>\n","      <td>True</td>\n","      <td>0xa79e63e78eec28741e711f89a672a4c40876ebf3</td>\n","      <td>NaN</td>\n","      <td>0xf4d2888d29d722226fafa5d9b24f9164c092421e</td>\n","      <td>LooksRare Token (LOOKS)</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 45 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-346bb4eb-4e24-47be-84f0-0751aa6fe198')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-346bb4eb-4e24-47be-84f0-0751aa6fe198 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-346bb4eb-4e24-47be-84f0-0751aa6fe198');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["#mb-1 mb-sm-0 u-label u-label--xs u-label--secondary\n","\n","# Import Module\n","from bs4 import BeautifulSoup\n","import requests\n","\n","# Website URL\n","URL = 'https://etherscan.io/address/0xf4d2888d29d722226fafa5d9b24f9164c092421e'\n","# Import Required Module\n","import requests\n","from bs4 import BeautifulSoup\n"," \n","# Get URL Content\n","r = requests.get(URL)\n","\n","# Parse HTML Code\n","soup = BeautifulSoup(r.content, 'html.parser')\n","print(soup.prettify())\n","\n"],"metadata":{"id":"KTf_fzVhHUG6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import requests\n","adress1=\"0xdef1c0ded9bec7f1a1670819833240f027b25eff\"\n","adress2=\"0xa79e63e78eec28741e711f89a672a4c40876ebf3\"\n","adress3=\"0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d\"\n","url1 = \"https://api.covalenthq.com/v1/1/tokens/\"+str(adress1) +\"/nft_metadata/1/?quote-currency=USD&format=JSON&key=ckey_31ce9d97a5a64550b6110c50ac0\"\n","\n","url2 = \"https://api.covalenthq.com/v1/1/tokens/\"+str(adress2) +\"/nft_metadata/1/?quote-currency=USD&format=JSON&key=ckey_31ce9d97a5a64550b6110c50ac0\"\n","url3 = \"https://api.covalenthq.com/v1/1/tokens/\"+str(adress3) +\"/nft_metadata/1/?quote-currency=USD&format=JSON&key=ckey_31ce9d97a5a64550b6110c50ac0\"\n","\n","response = requests.request(\"GET\", url1, headers=headers, data=payload)\n","print(response.text)\n","\n","response = requests.request(\"GET\", url2, headers=headers, data=payload)\n","print(response.text)\n","response = requests.request(\"GET\", url3, headers=headers, data=payload)\n","print(response.text)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vT7db4CpLTKW","executionInfo":{"status":"ok","timestamp":1661588086206,"user_tz":-330,"elapsed":9,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"3662cc3e-9cdd-4006-e3e0-a40cedeacdd5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{\"data\":{\"updated_at\":\"2022-08-27T08:09:34.183958022Z\",\"items\":[{\"contract_decimals\":0,\"contract_name\":null,\"contract_ticker_symbol\":null,\"contract_address\":\"0xdef1c0ded9bec7f1a1670819833240f027b25eff\",\"supports_erc\":[\"erc20\"],\"logo_url\":\"https://logos.covalenthq.com/tokens/1/0xdef1c0ded9bec7f1a1670819833240f027b25eff.png\",\"type\":\"nft\",\"nft_data\":null}],\"pagination\":null},\"error\":false,\"error_message\":null,\"error_code\":null}\n","{\"data\":{\"updated_at\":\"2022-08-27T08:09:34.378397664Z\",\"items\":[{\"contract_decimals\":0,\"contract_name\":null,\"contract_ticker_symbol\":null,\"contract_address\":\"0xa79e63e78eec28741e711f89a672a4c40876ebf3\",\"supports_erc\":[\"erc20\"],\"logo_url\":\"https://logos.covalenthq.com/tokens/1/0xa79e63e78eec28741e711f89a672a4c40876ebf3.png\",\"type\":\"nft\",\"nft_data\":null}],\"pagination\":null},\"error\":false,\"error_message\":null,\"error_code\":null}\n","{\"data\":{\"updated_at\":\"2022-08-27T08:09:34.568998510Z\",\"items\":[{\"contract_decimals\":18,\"contract_name\":\"Aave Interest bearing DAI\",\"contract_ticker_symbol\":\"aDAI\",\"contract_address\":\"0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d\",\"supports_erc\":null,\"logo_url\":\"https://logos.covalenthq.com/tokens/0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d.png\",\"type\":\"nft\",\"nft_data\":null}],\"pagination\":null},\"error\":false,\"error_message\":null,\"error_code\":null}\n"]}]},{"cell_type":"code","source":["a['to_address'].unique()"],"metadata":{"id":"_hJvRvDWAz-a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a['to_address_label'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IoK9-Z5JvyI7","executionInfo":{"status":"ok","timestamp":1661588709853,"user_tz":-330,"elapsed":616,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"ecefdff0-fe15-4c59-d7db-5e95eb45af6f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([nan, 'LooksRare Token (LOOKS)', 'Aave: aDAI Token V1',\n","       'PoolTogether: DAI Prize Pool', 'Hop Protocol: Ethereum Bridge',\n","       'Dai Stablecoin (DAI)', 'Hop Protocol: DAI Bridge',\n","       'LooksRare: Exchange', 'Wrapped Ether', 'USD Coin (USDC)',\n","       'OpenSea: Wyvern Exchange v1', 'FOX (FOX)',\n","       'Ethereum Name Service (ENS)', 'Zora: Auction House',\n","       'Optimism: Gateway'], dtype=object)"]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["arr=a['to_address'].unique()"],"metadata":{"id":"mHXmWt3g9dHX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import requests\n","\n","url = \"https://api.opensea.io/api/v1/asset_contract/0x06012c8cf97bead5deae237070f9587f8e7a266d\"\n","\n","response = requests.get(url)\n","\n","print(response.text)"],"metadata":{"id":"81k6pnt3Cbf4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import requests\n","for i in arr:\n","\n","  url = \"https://api.opensea.io/api/v1/asset_contract/\"+str(i)\n","\n","  response = requests.get(url)\n","  try:\n","    print()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":341},"id":"4X0NzwL1AxYG","executionInfo":{"status":"error","timestamp":1661582167338,"user_tz":-330,"elapsed":8,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"d684b417-4199-4f91-c2f7-de83c39f1810"},"execution_count":null,"outputs":[{"output_type":"error","ename":"JSONDecodeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mJSONDecodeError\u001b[0m                           Traceback (most recent call last)","\u001b[0;32m<ipython-input-20-370b0f540a09>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrequests\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjson\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/requests/models.py\u001b[0m in \u001b[0;36mjson\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    896\u001b[0m                     \u001b[0;31m# used.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                     \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 898\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mcomplexjson\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloads\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    899\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    900\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/json/__init__.py\u001b[0m in \u001b[0;36mloads\u001b[0;34m(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\u001b[0m\n\u001b[1;32m    346\u001b[0m             \u001b[0mparse_int\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mparse_float\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    347\u001b[0m             parse_constant is None and object_pairs_hook is None and not kw):\n\u001b[0;32m--> 348\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_default_decoder\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    349\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcls\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    350\u001b[0m         \u001b[0mcls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mJSONDecoder\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/json/decoder.py\u001b[0m in \u001b[0;36mdecode\u001b[0;34m(self, s, _w)\u001b[0m\n\u001b[1;32m    335\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    336\u001b[0m         \"\"\"\n\u001b[0;32m--> 337\u001b[0;31m         \u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mraw_decode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0midx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_w\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    338\u001b[0m         \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_w\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    339\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mend\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/json/decoder.py\u001b[0m in \u001b[0;36mraw_decode\u001b[0;34m(self, s, idx)\u001b[0m\n\u001b[1;32m    353\u001b[0m             \u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscan_once\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0midx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    354\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mStopIteration\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 355\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mJSONDecodeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Expecting value\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    356\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mJSONDecodeError\u001b[0m: Expecting value: line 1 column 1 (char 0)"]}]},{"cell_type":"code","source":["print(response.json())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":304},"id":"QpI4O8aMv0Eu","executionInfo":{"status":"error","timestamp":1661582176552,"user_tz":-330,"elapsed":425,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"07c49115-5ffc-4b70-b7b7-76270822f968"},"execution_count":null,"outputs":[{"output_type":"error","ename":"JSONDecodeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mJSONDecodeError\u001b[0m                           Traceback (most recent call last)","\u001b[0;32m<ipython-input-21-5225e3996d33>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjson\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/requests/models.py\u001b[0m in \u001b[0;36mjson\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    896\u001b[0m                     \u001b[0;31m# used.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                     \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 898\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mcomplexjson\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloads\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    899\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    900\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/json/__init__.py\u001b[0m in \u001b[0;36mloads\u001b[0;34m(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\u001b[0m\n\u001b[1;32m    346\u001b[0m             \u001b[0mparse_int\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mparse_float\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    347\u001b[0m             parse_constant is None and object_pairs_hook is None and not kw):\n\u001b[0;32m--> 348\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_default_decoder\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    349\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcls\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    350\u001b[0m         \u001b[0mcls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mJSONDecoder\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/json/decoder.py\u001b[0m in \u001b[0;36mdecode\u001b[0;34m(self, s, _w)\u001b[0m\n\u001b[1;32m    335\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    336\u001b[0m         \"\"\"\n\u001b[0;32m--> 337\u001b[0;31m         \u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mraw_decode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0midx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_w\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    338\u001b[0m         \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_w\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    339\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mend\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/json/decoder.py\u001b[0m in \u001b[0;36mraw_decode\u001b[0;34m(self, s, idx)\u001b[0m\n\u001b[1;32m    353\u001b[0m             \u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscan_once\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0midx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    354\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mStopIteration\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 355\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mJSONDecodeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Expecting value\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    356\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mJSONDecodeError\u001b[0m: Expecting value: line 1 column 1 (char 0)"]}]},{"cell_type":"code","source":["a[['to_address','to_address_label']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"ogyCfd0gv0Cr","executionInfo":{"status":"ok","timestamp":1661588891342,"user_tz":-330,"elapsed":6,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"85430af3-ef64-40cb-9079-335391db74fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                     to_address         to_address_label\n","0    0xdef1c0ded9bec7f1a1670819833240f027b25eff                      NaN\n","1    0xf4d2888d29d722226fafa5d9b24f9164c092421e  LooksRare Token (LOOKS)\n","2    0xf4d2888d29d722226fafa5d9b24f9164c092421e  LooksRare Token (LOOKS)\n","3    0xf4d2888d29d722226fafa5d9b24f9164c092421e  LooksRare Token (LOOKS)\n","4    0xf4d2888d29d722226fafa5d9b24f9164c092421e  LooksRare Token (LOOKS)\n","..                                          ...                      ...\n","893  0x99c9fc46f92e8a1c0dec1b1747d010903e884be1        Optimism: Gateway\n","894  0x99c9fc46f92e8a1c0dec1b1747d010903e884be1        Optimism: Gateway\n","895  0x99c9fc46f92e8a1c0dec1b1747d010903e884be1        Optimism: Gateway\n","896  0x99c9fc46f92e8a1c0dec1b1747d010903e884be1        Optimism: Gateway\n","897  0x99c9fc46f92e8a1c0dec1b1747d010903e884be1        Optimism: Gateway\n","\n","[898 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-e8508479-d73c-4a4d-8883-fba27797b6cc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>to_address</th>\n","      <th>to_address_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0xdef1c0ded9bec7f1a1670819833240f027b25eff</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0xf4d2888d29d722226fafa5d9b24f9164c092421e</td>\n","      <td>LooksRare Token (LOOKS)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0xf4d2888d29d722226fafa5d9b24f9164c092421e</td>\n","      <td>LooksRare Token (LOOKS)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0xf4d2888d29d722226fafa5d9b24f9164c092421e</td>\n","      <td>LooksRare Token (LOOKS)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0xf4d2888d29d722226fafa5d9b24f9164c092421e</td>\n","      <td>LooksRare Token (LOOKS)</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>893</th>\n","      <td>0x99c9fc46f92e8a1c0dec1b1747d010903e884be1</td>\n","      <td>Optimism: Gateway</td>\n","    </tr>\n","    <tr>\n","      <th>894</th>\n","      <td>0x99c9fc46f92e8a1c0dec1b1747d010903e884be1</td>\n","      <td>Optimism: Gateway</td>\n","    </tr>\n","    <tr>\n","      <th>895</th>\n","      <td>0x99c9fc46f92e8a1c0dec1b1747d010903e884be1</td>\n","      <td>Optimism: Gateway</td>\n","    </tr>\n","    <tr>\n","      <th>896</th>\n","      <td>0x99c9fc46f92e8a1c0dec1b1747d010903e884be1</td>\n","      <td>Optimism: Gateway</td>\n","    </tr>\n","    <tr>\n","      <th>897</th>\n","      <td>0x99c9fc46f92e8a1c0dec1b1747d010903e884be1</td>\n","      <td>Optimism: Gateway</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>898 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8508479-d73c-4a4d-8883-fba27797b6cc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e8508479-d73c-4a4d-8883-fba27797b6cc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e8508479-d73c-4a4d-8883-fba27797b6cc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["a.columns"],"metadata":{"id":"4CTYwJEbv0Ae","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661585767240,"user_tz":-330,"elapsed":609,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"fa5dc551-87e8-46d1-adb5-581650714471"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['block_signed_at', 'block_height', 'tx_hash', 'tx_offset', 'successful',\n","       'from_address', 'from_address_label', 'to_address', 'to_address_label',\n","       'value', 'value_quote', 'gas_offered', 'gas_spent', 'gas_price',\n","       'fees_paid', 'gas_quote', 'gas_quote_rate',\n","       'log_events_block_signed_at', 'log_events_block_height',\n","       'log_events_tx_offset', 'log_events_log_offset', 'log_events_tx_hash',\n","       'log_events_sender_contract_decimals', 'log_events_sender_name',\n","       'log_events_sender_contract_ticker_symbol', 'log_events_sender_address',\n","       'log_events_sender_address_label', 'log_events_sender_logo_url',\n","       'log_events_raw_log_data', 'log_events_raw_log_topics_0',\n","       'log_events_raw_log_topics_1', 'log_events_raw_log_topics_2',\n","       'log_events_decoded_name', 'log_events_decoded_signature',\n","       'log_events_decoded_params_name', 'log_events_decoded_params_type',\n","       'log_events_decoded_params_indexed',\n","       'log_events_decoded_params_decoded', 'log_events_decoded_params_value',\n","       'log_events_decoded_params_value_value',\n","       'log_events_decoded_params_value_bitSize',\n","       'log_events_decoded_params_value_typeAsString',\n","       'log_events_raw_log_topics_3', 'log_events_decoded',\n","       'log_events_decoded_params'],\n","      dtype='object')"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["\n","a['to_address_label'].unique()"],"metadata":{"id":"3JcRWYeLvz-o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661588154087,"user_tz":-330,"elapsed":7,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"b8db3591-d097-48e4-98ff-c8d48fe2847a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([nan, 'LooksRare Token (LOOKS)', 'Aave: aDAI Token V1',\n","       'PoolTogether: DAI Prize Pool', 'Hop Protocol: Ethereum Bridge',\n","       'Dai Stablecoin (DAI)', 'Hop Protocol: DAI Bridge',\n","       'LooksRare: Exchange', 'Wrapped Ether', 'USD Coin (USDC)',\n","       'OpenSea: Wyvern Exchange v1', 'FOX (FOX)',\n","       'Ethereum Name Service (ENS)', 'Zora: Auction House',\n","       'Optimism: Gateway'], dtype=object)"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["df=pd.DataFrame(a[['block_signed_at','to_address_label']])"],"metadata":{"id":"BD4f93Dgvz8O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["items = set()\n","for col in df:\n","    print(col)\n","    items.update(df[col].unique())\n","print(items)"],"metadata":{"id":"QvGKQxbgvz6R","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661588559620,"user_tz":-330,"elapsed":6,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"2d0cf4e2-ba12-4493-c002-7cbb53ccdd84"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["block_signed_at\n","to_address_label\n","{nan, '2021-11-09T13:15:38Z', '2021-12-23T16:02:17Z', '2021-09-25T13:48:49Z', '2021-11-23T21:51:59Z', '2021-11-25T23:28:25Z', '2022-06-08T06:26:10Z', '2022-06-08T06:23:59Z', '2021-10-12T11:33:50Z', '2022-05-21T20:33:15Z', 'FOX (FOX)', '2021-11-24T06:46:15Z', '2021-09-12T19:20:59Z', 'USD Coin (USDC)', '2022-05-13T13:27:51Z', '2022-05-20T20:35:31Z', '2021-10-16T04:25:42Z', '2022-06-21T11:35:08Z', '2022-08-04T23:55:48Z', '2021-11-23T22:12:36Z', '2022-08-01T00:59:00Z', '2021-11-09T13:22:29Z', '2022-04-15T14:08:33Z', '2021-12-15T03:48:33Z', '2022-08-01T05:53:18Z', '2022-06-22T10:02:04Z', '2021-10-13T01:09:28Z', 'Optimism: Gateway', '2021-09-12T16:38:14Z', 'Aave: aDAI Token V1', '2022-02-19T02:21:20Z', '2021-12-15T03:50:06Z', '2021-12-23T16:29:44Z', '2022-05-10T15:49:03Z', '2022-04-16T13:46:48Z', '2022-06-02T21:55:00Z', '2021-11-26T23:30:48Z', '2021-11-09T13:12:47Z', '2021-12-12T05:40:54Z', 'Hop Protocol: Ethereum Bridge', '2021-11-22T15:36:30Z', '2022-05-09T03:22:12Z', '2021-11-18T19:13:48Z', 'Wrapped Ether', '2022-05-11T00:01:24Z', '2021-09-24T05:31:11Z', 'Ethereum Name Service (ENS)', '2022-05-11T00:26:17Z', '2021-12-22T11:50:47Z', '2021-11-18T15:56:44Z', '2021-11-09T13:43:47Z', '2022-08-04T21:53:58Z', '2021-10-16T22:28:54Z', 'LooksRare: Exchange', '2022-06-18T10:51:07Z', '2022-05-09T03:57:43Z', '2022-07-02T13:07:47Z', '2021-12-15T03:45:29Z', '2022-02-26T19:01:54Z', '2021-12-15T03:45:52Z', '2021-10-06T16:37:14Z', '2022-02-12T13:07:36Z', '2021-12-26T05:00:25Z', '2021-11-09T13:17:39Z', '2021-10-12T22:18:58Z', 'Zora: Auction House', '2021-10-12T08:32:03Z', '2022-04-15T13:59:34Z', '2022-04-08T22:39:05Z', '2022-03-07T06:48:01Z', '2021-11-23T07:14:21Z', '2021-11-09T13:08:47Z', '2022-05-09T01:08:37Z', '2021-10-17T02:03:12Z', '2021-11-14T02:55:58Z', '2021-11-09T05:30:43Z', '2022-04-16T13:44:22Z', '2021-11-16T15:14:59Z', '2022-05-10T15:32:06Z', '2022-04-15T13:59:22Z', '2022-07-02T13:10:34Z', '2021-11-26T22:44:14Z', '2022-06-18T10:52:16Z', 'LooksRare Token (LOOKS)', 'OpenSea: Wyvern Exchange v1', '2021-10-17T03:39:01Z', '2021-11-18T19:19:45Z', '2022-02-17T11:03:37Z', '2021-11-09T13:05:57Z', '2021-11-26T10:26:14Z', 'PoolTogether: DAI Prize Pool', '2021-10-10T16:59:36Z', 'Dai Stablecoin (DAI)', '2022-02-05T11:27:24Z', 'Hop Protocol: DAI Bridge', '2022-02-14T04:19:24Z', '2021-10-31T05:28:10Z', '2022-05-09T02:49:35Z', '2022-08-05T09:25:37Z', '2022-02-17T11:37:06Z', '2021-11-22T16:25:55Z', '2022-03-23T00:25:29Z', '2022-03-07T10:11:38Z', '2022-04-15T14:04:42Z', '2022-06-18T10:54:51Z', '2022-02-13T17:50:46Z', '2022-02-18T03:27:50Z', '2022-07-02T13:11:35Z', '2021-11-25T23:24:09Z', '2022-05-10T23:53:59Z', '2021-12-12T05:17:33Z', '2021-09-21T03:46:24Z'}\n"]}]},{"cell_type":"code","source":["da=pd.read_excel(\"/content/Book1.xlsx\")"],"metadata":{"id":"1AwQVzZffkTB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["list(da['HolderAddress'])"],"metadata":{"id":"iJ-q0Azwiimv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"Zw3-dWR-fkIs"}},{"cell_type":"code","source":["import requests\n","import time\n","import pandas as pd\n","da=pd.read_excel(\"/content/Book1.xlsx\")\n","l=list(da['HolderAddress'])\n","import json\n","l2={}\n","mst1=[]\n","with open('asas.json', 'w') as fp:\n","  for i in l:\n","   # try:\n","        st=time.time()\n","        url = \"https://api.covalenthq.com/v1/1/address/\"+str(i)+\"/transactions_v2/?key=ckey_31ce9d97a5a64550b6110c50ac0\"\n","\n","        payload={}\n","        headers = {}\n","\n","        response = requests.request(\"GET\", url, headers=headers, data=payload)\n","        #l2.add(response.json())\n","        da1=response.json()\n","        da2=da1[\"data\"][\"items\"]\n","        mas={'gas_spent':0,'to_address_label':[],'block_signed_at':[]}\n","        for ec in da2:\n","          \n","          if ec['to_address_label']:\n","            mas['gas_spent']+=ec['gas_spent']*ec['gas_price']\n","            mas['to_address_label'].append(ec['to_address_label'])\n","            mas['block_signed_at'].append(ec['block_signed_at'])\n","        mst1.append(mas)\n","        en=time.time()-st\n","        print(en)\n","       \n","        #json.dump(str(response.json())+\"~~~~~~\", fp)\n","   # except:\n","    #   print(response)\n","#\n"],"metadata":{"id":"kNWB40OZvz4G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["len(mst1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XU2fJD2atp5w","executionInfo":{"status":"ok","timestamp":1661617555862,"user_tz":-330,"elapsed":363,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"841b6332-bca3-46f7-a611-9a0c7ec82dca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["540"]},"metadata":{},"execution_count":150}]},{"cell_type":"code","source":["di=dict()\n","for i in mast1:\n","  for j in i['block_signed_at']:\n","    di[j]"],"metadata":{"id":"Q5vLGjODJF_j"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def groupAnagrams(strs):\n","        h = {}\n","        for word in strs:\n","            sortedWord = ''.join(sorted(word))\n","            if sortedWord not in h:\n","                tmp=set()\n","                tmp.add(word)\n","                h[sortedWord] = tmp\n","            else:\n","                h[sortedWord].add(word)\n","        final = []\n","        for value in h.values():\n","            final.append(value)\n","        return final"],"metadata":{"id":"dzSDQQTfLlVp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["main=[]\n","for i in range(len(mst1)):\n","\n","  main.append((groupAnagrams(mst1[i]['to_address_label'])))\n"],"metadata":{"id":"CT9_-0LAZPVu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["items = set()\n","da=df\n","for col in da:\n","    items.update(da[col].unique())\n","print(items)\n","itemset = set(items)\n","\n","encoded_vals = []\n","for index, row in da.iterrows():\n","    rowset = set(row) \n","    labels = {}\n","    uncommons = list(itemset - rowset)\n","    commons = list(itemset.intersection(rowset))\n","    for uc in uncommons:\n","        labels[uc] = 0\n","    for com in commons:\n","        labels[com] = 1\n","    encoded_vals.append(labels)\n","encoded_vals[0]\n","ohe_df = pd.DataFrame(encoded_vals)\n","\n","\n","from mlxtend.frequent_patterns import apriori\n","# the moment we have all been waiting for\n","freq_items = apriori(ohe_df, min_support=0.01, use_colnames=True)\n","freq_items"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":462},"id":"mVgcGAEBMFqQ","executionInfo":{"status":"ok","timestamp":1661635430991,"user_tz":-330,"elapsed":1074,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"3cf530eb-6d38-4fb8-d89f-14dbd8cdf5b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Kin (KIN)', 'Ribbon Finance: ETH Put-Selling Vault V2', 'Orchid: OXT Token', 'Uniswap (UNI)', 'Bitcoin Suisse: Eth2 Depositor 4', 'xShib Staked Shiba Inu (xSHIB)', 'Ethereum Name Service (ENS)', 'PoolTogether: DAI Prize Pool', 'IOSToken (IOST)', 'Keep: TokenGrant', 'Ribbon Finance: ETH Put-Selling yvUSDC Vault V2', 'Synthetix Network Token (SNX)', 'SushiToken (SUSHI)', 'Beanstalk: Beanstalk Protocol', 'BandToken (BAND)', 'LCX (LCX)', 'Synapse: Bridge', 'Manifold Finance (FOLD)', None, 'Aave interest bearing USDT (aUSDT)', 'XDEFI (XDEFI)', 'Compound USD Coin (cUSDC)', 'CoinList 1', '1inch.exchange', 'NuNet Utility Token (NTX)', 'Rarible: Exchange Proxy', 'ParaSwap P4', 'KyberNetwork (KNC)', 'KEEP Token (KEEP)', 'Kyber Swap: Reward Locker', 'EnjinCoin (ENJ)', 'Vesper Finance: vETH Token', 'Singularity Dao (SDAO)', 'LooksRare: Airdrop', 'ENS: Bulk Renewal', 'Yield Guild Games Token (YGG)', 'Nomad: Bridge', 'Graph Token (GRT)', 'ApeCoin (APE)', 'Rarible (RARI)', 'Ampleforth (AMPL)', 'renBTC (renBTC)', 'FOAM Token (FOAM)', 'Maker: Proxy Registry', 'Metaverse Index (MVI)', 'BlockFi 4', 'BitDAO: BIT Token', 'LooksRare: Exchange', '1INCH Token (1INCH)', 'Gemini dollar (GUSD)', 'Uniswap: Token Distributor', 'OriginToken (OGN)', 'Illuvium (ILV)', 'Melon Token (MLN)', 'Compound USDT (cUSDT)', 'Mainframe Token (MFT)', 'DEUS (DEUS)', 'Gearbox Protocol: Credit Account Mining', 'SENTINEL PROTOCOL (UPP)', 'Bitpanda Ecosystem Token (BEST)', 'Decentraland (MANA)', 'Value Liquidity (VALUE)', 'Wyvern Exchange Contract (-)', 'Arcona Distribution Contract (ARCONA)', 'VIN (VIN)', 'Liquity LUSD: LUSD Token', 'OTC: 0x054...58e', 'LooksRare: Fee Sharing', 'Tronix (TRX)', 'Tiger King (TKING)', '1inch v4: Router', 'HoloToken (HOT)', 'Gem: GemSwap 2', 'Celsius (CEL)', 'Rocket Pool (RPL)', 'Hxro (HXRO)', 'Synth sUSD (sUSD)', 'Aave: aLINK Token V1', 'Gnosis (GNO)', 'Frax (FRAX)', 'Swipe (SXP)', '1inch v3', 'CRYPTOPUNKS (Ͼ)', 'Reserve Rights (RSR)', 'Mass Vehicle Ledger Token (MVL)', 'Hop Protocol: Ethereum Bridge', 'Ultiledger (ULT)', 'Kyber Swap: Router', 'Modum Token (MOD)', 'Cronos Coin (CRO)', 'Art Blocks (BLOCKS)', 'mStable USD (mUSD)', 'Bitstamp 2', 'UST (Wormhole) (UST)', 'Synth sETH (sETH)', 'Empty Set Dollar: ESD Token', 'DGD (DGD)', 'Aura: Airdrops', 'Binance USD (BUSD)', 'Ultra Token (UOS)', 'ChainLink Token (LINK)', 'Paragons DAO Token (PDT)', 'Aurora (AURORA)', 'ZRX (ZRX)', 'Etheroll Token', 'Republic (REN)', 'Wrapped UST Token (UST)', 'Lido: Curve Liquidity Farming Pool Contract', 'Terra Virtua Kolect (TVK)', '@EthernityChain $ERN Token (ERN)', 'Neo Tokyo: NTCTZN Token', 'TrueGBP (TGBP)', 'LoopringCoin V2 (LRC)', 'Premia (PREMIA)', 'SushiSwap: MasterChef LP Staking Pool', 'Wrapped Ether', 'MANTRA DAO (OM)', 'AlphaToken (ALPHA)', 'Rock: Old Token', 'Livepeer Token (LPT)', 'sudoswap: Pair Router', 'OpenSea: Registry', 'Aave: aMANA Token V1', 'MEV Bot: 0x000...2D4', 'Dai Stablecoin (DAI)', 'Convex Finance: Booster', 'Metamask: Swap Router', 'Temple (TEMPLE)', 'Tidal Token (TIDAL)', 'Bancor (BNT)', 'COTI Token (COTI)', 'Aave interest bearing SNX (aSNX)', 'Optimism: Gateway', 'Reputation (REPv2)', 'Chain (XCN)', '1inch Network v2', 'Wrapped BTC (WBTC)', 'VeChain (VEN)', 'Fantom Token (FTM)', 'OpenSea Shared Storefront (OPENSTORE)', 'USDC yVault (yvUSDC)', 'Uppsala: Token Sale', '1inch Network: CHI Token', 'LooksRare: Aggregator Fee Sharing Uniswap V3', 'STASIS EURS Token (EURS)', 'Nexo (NEXO)', 'Tether USD (USDT)', 'Axie Infinity Shard (AXS)', 'AnySwap: ANY Token', 'chiliZ (CHZ)', 'LooksRare Token (LOOKS)', 'Litentry (LIT)', 'Aave Token (AAVE)', 'Lido DAO Token (LDO)', 'Compound (COMP)', 'Aave: aAAVE Token V1', 'Dopex Governance Token (DPX)', 'OpenSea: Wyvern Exchange v1', 'Index Coop: INDEX Token', 'LUKSO: LYXe Token', 'Spell Token (SPELL)', 'Ribbon (RBN)', 'Balancer (BAL)', 'Illuvium: Migrate', 'Tribe (TRIBE)', 'SushiSwap: Merkle Distributor', 'dYdX (DYDX)', 'USD Coin (USDC)', 'BAT (BAT)', 'Celer Network: CELR Token', 'FOX (FOX)', 'tBTC: TBTC Token', 'Maker (MKR)', 'Fake_Phishing5401', 'bZx Protocol Token', 'Pax Dollar (USDP)', 'THORChain ETH.RUNE (RUNE)', 'FTT (FTX Token)', 'POA Network: AMB-ETH-XDAI', 'Aave interest bearing WETH (aWETH)', 'AudioGlyphs', 'PoolTogether (POOL)', 'DEXA COIN (DEXA)', 'Index Coop: ETH 2x Flexible Leverage Index', 'Liquity: Borrower Operations', 'Uniswap V2: Router 2', 'Synapse (SYN)', 'OMG Network: OMG Token', 'GSENetwork (GSE)', 'Virtue Player Points (VPP)', 'BlockFi 1', 'Compound: cETH Token', 'Aave interest bearing USDC (aUSDC)', 'Trace (TRAC)', 'Nomad: ERC20 Bridge', 'HEX (HEX)', 'Wormhole: LUNA Token', 'ParaSwap (PSP)', 'QASH (QASH)', 'RAZOR (RAZOR)', 'Artificial Liquid Intelligence Toke... (ALI)', 'Illuvium: ILV Core Pool', 'IDEX Token (IDEX)', 'stETH (stETH)', 'Convex Finance: Claim Zap', 'Alchemist (⚗️)', 'Kyber Network: Rainmaker', 'Neos Credits (NCR)', 'Gemini 4', 'Arbitrum One: L1 Gateway Router', 'LABS Group (LABS)'}\n"]},{"output_type":"execute_result","data":{"text/plain":["      support                                           itemsets\n","0    0.025926                                    (Uniswap (UNI))\n","1    0.022222                      (Ethereum Name Service (ENS))\n","2    0.024074                    (Synthetix Network Token (SNX))\n","3    0.024074                               (SushiToken (SUSHI))\n","4    0.014815                                  (Synapse: Bridge)\n","..        ...                                                ...\n","381  0.012963  (None, 1inch v4: Router, Tether USD (USDT), Wr...\n","382  0.016667  (None, Wrapped BTC (WBTC), Dai Stablecoin (DAI...\n","383  0.011111  (None, Uniswap V2: Router 2, Dai Stablecoin (D...\n","384  0.018519  (None, 1inch v4: Router, Dai Stablecoin (DAI),...\n","385  0.011111  (None, Wrapped BTC (WBTC), 1inch v4: Router, T...\n","\n","[386 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-91a116d6-e11b-4277-a57f-b4be428e2d05\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.025926</td>\n","      <td>(Uniswap (UNI))</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.022222</td>\n","      <td>(Ethereum Name Service (ENS))</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.024074</td>\n","      <td>(Synthetix Network Token (SNX))</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.024074</td>\n","      <td>(SushiToken (SUSHI))</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.014815</td>\n","      <td>(Synapse: Bridge)</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>381</th>\n","      <td>0.012963</td>\n","      <td>(None, 1inch v4: Router, Tether USD (USDT), Wr...</td>\n","    </tr>\n","    <tr>\n","      <th>382</th>\n","      <td>0.016667</td>\n","      <td>(None, Wrapped BTC (WBTC), Dai Stablecoin (DAI...</td>\n","    </tr>\n","    <tr>\n","      <th>383</th>\n","      <td>0.011111</td>\n","      <td>(None, Uniswap V2: Router 2, Dai Stablecoin (D...</td>\n","    </tr>\n","    <tr>\n","      <th>384</th>\n","      <td>0.018519</td>\n","      <td>(None, 1inch v4: Router, Dai Stablecoin (DAI),...</td>\n","    </tr>\n","    <tr>\n","      <th>385</th>\n","      <td>0.011111</td>\n","      <td>(None, Wrapped BTC (WBTC), 1inch v4: Router, T...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>386 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-91a116d6-e11b-4277-a57f-b4be428e2d05')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-91a116d6-e11b-4277-a57f-b4be428e2d05 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-91a116d6-e11b-4277-a57f-b4be428e2d05');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["from mlxtend.frequent_patterns import apriori\n","# the moment we have all been waiting for\n","freq_items = apriori(ohe_df, min_support=0.03, use_colnames=True)\n","freq_items"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1549},"id":"u7PE1OVhMK0X","executionInfo":{"status":"ok","timestamp":1661635642936,"user_tz":-330,"elapsed":689,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"1aeeb912-9d17-47cd-8545-c2c9fec4525b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     support                                           itemsets\n","0   0.037037                                         (1inch v3)\n","1   0.057407                           (ChainLink Token (LINK))\n","2   0.031481                          (Wrapped UST Token (UST))\n","3   0.081481                                    (Wrapped Ether)\n","4   0.120370                             (Dai Stablecoin (DAI))\n","..       ...                                                ...\n","62  0.035185  (Tether USD (USDT), Wrapped Ether, None, USD C...\n","63  0.064815  (Dai Stablecoin (DAI), Tether USD (USDT), None...\n","64  0.037037  (Tether USD (USDT), Wrapped BTC (WBTC), None, ...\n","65  0.057407  (Tether USD (USDT), Uniswap V2: Router 2, None...\n","66  0.046296  (Tether USD (USDT), 1inch v4: Router, None, US...\n","\n","[67 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-089f5d24-46e0-4814-802f-4e7f98c5ab7e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.037037</td>\n","      <td>(1inch v3)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.057407</td>\n","      <td>(ChainLink Token (LINK))</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.031481</td>\n","      <td>(Wrapped UST Token (UST))</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.081481</td>\n","      <td>(Wrapped Ether)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.120370</td>\n","      <td>(Dai Stablecoin (DAI))</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>0.035185</td>\n","      <td>(Tether USD (USDT), Wrapped Ether, None, USD C...</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>0.064815</td>\n","      <td>(Dai Stablecoin (DAI), Tether USD (USDT), None...</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>0.037037</td>\n","      <td>(Tether USD (USDT), Wrapped BTC (WBTC), None, ...</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>0.057407</td>\n","      <td>(Tether USD (USDT), Uniswap V2: Router 2, None...</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>0.046296</td>\n","      <td>(Tether USD (USDT), 1inch v4: Router, None, US...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>67 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-089f5d24-46e0-4814-802f-4e7f98c5ab7e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-089f5d24-46e0-4814-802f-4e7f98c5ab7e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-089f5d24-46e0-4814-802f-4e7f98c5ab7e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["d_imgs={'DAI':\"https://s2.coinmarketcap.com/static/img/coins/200x200/4943.png\",\"LINK\":\"https://assets.coingecko.com/coins/images/877/large/chainlink-new-logo.png?1547034700\",\"USDT\":\"https://s2.coinmarketcap.com/static/img/coins/200x200/825.png\",\"USDC\":\"https://s2.coinmarketcap.com/static/img/coins/200x200/3408.png\",\"WBTC\":\"https://s2.coinmarketcap.com/static/img/coins/200x200/3717.png\",\"WETH\":\"https://raw.githubusercontent.com/dappradar/tokens/main/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2/logo.png\",}"],"metadata":{"id":"GKUOCb3oNq7V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["d_info={'DAI':['USDC','USDT'],'LINK':['USDT','DAI'],'USDT':['LINK,'DAI','WBTC','WETH','USDC'],'USDC':['USDT','DAI','LINK','WETH','WBTC'],'WBTC':['USDC','USDT],'WETH':['USDT','WBTC','USDC']}"],"metadata":{"id":"CuenJ1J8OvNP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in d_imgs:\n","  print(i,d_imgs[i])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u4zFfBalbsKU","executionInfo":{"status":"ok","timestamp":1661639536710,"user_tz":-330,"elapsed":4,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"b12757be-3471-4087-97ac-70864f4b63d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["DAI https://s2.coinmarketcap.com/static/img/coins/200x200/4943.png\n","LINK https://assets.coingecko.com/coins/images/877/large/chainlink-new-logo.png?1547034700\n","USDT https://s2.coinmarketcap.com/static/img/coins/200x200/825.png\n","USDC https://s2.coinmarketcap.com/static/img/coins/200x200/3408.png\n","WBTC https://s2.coinmarketcap.com/static/img/coins/200x200/3717.png\n","WETH https://raw.githubusercontent.com/dappradar/tokens/main/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2/logo.png\n"]}]},{"cell_type":"code","source":["d_imgs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3maNwedXOqlf","executionInfo":{"status":"ok","timestamp":1661636097864,"user_tz":-330,"elapsed":371,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"5465cffe-fd4b-452f-e030-45c1c4f1b7c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'DAI': 'https://s2.coinmarketcap.com/static/img/coins/200x200/4943.png',\n"," 'LINK': 'https://assets.coingecko.com/coins/images/877/large/chainlink-new-logo.png?1547034700',\n"," 'USDT': 'https://s2.coinmarketcap.com/static/img/coins/200x200/825.png',\n"," 'USDC': 'https://s2.coinmarketcap.com/static/img/coins/200x200/3408.png',\n"," 'WBTC': 'https://s2.coinmarketcap.com/static/img/coins/200x200/3717.png',\n"," 'WETH': 'https://raw.githubusercontent.com/dappradar/tokens/main/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2/logo.png'}"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["'DAI':[\"USDC\",]\n","\n","ChainLink Token (LINK), USDC\n","Tether USD (USDT), Dai Stablecoin (DAI)\n","Wrapped BTC (WBTC), USDC\n","Wrapped Ether,USDC\n","{'Dai Stablecoin (DAI)', 'Tether USD (USDT)', None, 'USD Coin (USDC)\n","ether USD (USDT)', 'Wrapped BTC (WBTC)', None, 'USD Coin (USDC)'\n","ether USD (USDT)', None, 'USD Coin (USDC)'\n","ChainLink Token (LINK)', 'Tether USD (USDT)', 'USD Coin (USDC"],"metadata":{"id":"_w_SAzzJMR13"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"N62AYpZfNQAT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["m=[['1inch v4: Router', 'Metamask: Swap Router'], ['USD Coin (USDC)', 'Orchid: OXT Token', 'Aave Token (AAVE)', 'Tether USD (USDT)', 'Dai Stablecoin (DAI)', 'OTC: 0x054...58e', 'Compound (COMP)', 'Fantom Token (FTM)', 'ChainLink Token (LINK)', 'Wrapped BTC (WBTC)', 'FTT (FTX Token)', 'Uniswap (UNI)'], ['HEX (HEX)', 'Uniswap (UNI)', 'USD Coin (USDC)', 'Binance USD (BUSD)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Uniswap V2: Router 2', 'Tether USD (USDT)'], ['Uniswap V2: Router 2', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Frax (FRAX)', 'Dai Stablecoin (DAI)', 'SushiToken (SUSHI)', 'Wrapped BTC (WBTC)'], ['Uniswap V2: Router 2', 'USD Coin (USDC)', 'Tether USD (USDT)'], ['Uniswap V2: Router 2', 'USD Coin (USDC)', 'Tether USD (USDT)'], ['Uniswap V2: Router 2', 'USD Coin (USDC)', 'Graph Token (GRT)', 'Wrapped Ether', '1inch v4: Router', 'Lido: Curve Liquidity Farming Pool Contract'], ['Uniswap V2: Router 2', 'USD Coin (USDC)'], ['BlockFi 1'], ['Uniswap V2: Router 2', 'USD Coin (USDC)'], ['USD Coin (USDC)', '1inch v4: Router', 'Beanstalk: Beanstalk Protocol', 'Uniswap V2: Router 2'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Uniswap V2: Router 2', 'OMG Network: OMG Token'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Metamask: Swap Router'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)', '1inch v4: Router', 'Uniswap V2: Router 2', 'Metamask: Swap Router', 'POA Network: AMB-ETH-XDAI', 'Convex Finance: Claim Zap'], ['MEV Bot: 0x000...2D4'], ['Uniswap V2: Router 2', 'USD Coin (USDC)', 'Tether USD (USDT)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'dYdX (DYDX)', 'Optimism: Gateway', 'Lido: Curve Liquidity Farming Pool Contract', 'Balancer (BAL)', 'Wrapped Ether', 'stETH (stETH)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Synapse: Bridge', '1inch v4: Router', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Synth sUSD (sUSD)', 'STASIS EURS Token (EURS)', 'Binance USD (BUSD)', 'Compound USDT (cUSDT)', 'Pax Dollar (USDP)', 'Dai Stablecoin (DAI)', 'Wrapped UST Token (UST)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Bitpanda Ecosystem Token (BEST)', 'Uniswap V2: Router 2', 'ApeCoin (APE)', 'SushiToken (SUSHI)', 'Aave Token (AAVE)', 'IOSToken (IOST)', 'Reserve Rights (RSR)', 'LoopringCoin V2 (LRC)', 'Tether USD (USDT)', 'Reputation (REPv2)', 'Fantom Token (FTM)', 'Graph Token (GRT)', 'Axie Infinity Shard (AXS)'], ['Frax (FRAX)', 'UST (Wormhole) (UST)', 'Tether USD (USDT)', 'USD Coin (USDC)', 'Wrapped UST Token (UST)'], ['USD Coin (USDC)', 'Synthetix Network Token (SNX)', 'Graph Token (GRT)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Uniswap V2: Router 2'], ['USD Coin (USDC)'], ['Metamask: Swap Router', '1inch v4: Router'], ['1inch v4: Router', 'Metamask: Swap Router'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Binance USD (BUSD)', 'USD Coin (USDC)', 'Uniswap V2: Router 2'], ['USD Coin (USDC)'], ['USD Coin (USDC)', '1inch v4: Router', 'xShib Staked Shiba Inu (xSHIB)', 'Uniswap V2: Router 2'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Uniswap V2: Router 2', 'xShib Staked Shiba Inu (xSHIB)', 'Rarible (RARI)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'OpenSea: Registry'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Binance USD (BUSD)', 'ChainLink Token (LINK)', 'chiliZ (CHZ)'], ['USD Coin (USDC)', '1inch v4: Router', 'Wrapped BTC (WBTC)', 'Tether USD (USDT)', 'Uniswap V2: Router 2'], ['USD Coin (USDC)', 'dYdX (DYDX)', '1inch v4: Router', 'Optimism: Gateway', 'Convex Finance: Booster', 'Lido DAO Token (LDO)', 'AlphaToken (ALPHA)'], ['USD Coin (USDC)', 'Decentraland (MANA)', 'Balancer (BAL)', 'EnjinCoin (ENJ)', 'Cronos Coin (CRO)', 'ChainLink Token (LINK)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Convex Finance: Booster', 'Wrapped BTC (WBTC)', 'Spell Token (SPELL)', 'SushiSwap: MasterChef LP Staking Pool', 'Lido: Curve Liquidity Farming Pool Contract', 'Synth sETH (sETH)', 'Wrapped Ether', 'renBTC (renBTC)', 'tBTC: TBTC Token', 'KEEP Token (KEEP)', 'Keep: TokenGrant'], ['USD Coin (USDC)', '1inch v4: Router', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'ChainLink Token (LINK)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'Wrapped BTC (WBTC)', 'Wrapped UST Token (UST)', 'Uniswap V2: Router 2', 'SushiSwap: MasterChef LP Staking Pool', 'BitDAO: BIT Token', 'Wrapped Ether'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], [], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Frax (FRAX)', 'Convex Finance: Booster', 'Tether USD (USDT)', 'UST (Wormhole) (UST)', 'Convex Finance: Claim Zap'], ['Uniswap V2: Router 2', 'Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], [], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Binance USD (BUSD)', 'Uniswap (UNI)'], [], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'ChainLink Token (LINK)', 'Dai Stablecoin (DAI)', 'Graph Token (GRT)', '@EthernityChain $ERN Token (ERN)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Ethereum Name Service (ENS)', 'Tether USD (USDT)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Paragons DAO Token (PDT)'], ['Ethereum Name Service (ENS)'], ['USD Coin (USDC)'], ['Uniswap V2: Router 2', 'Metamask: Swap Router', '1inch v4: Router'], ['USD Coin (USDC)', 'CoinList 1'], ['Uniswap V2: Router 2', 'Tether USD (USDT)', 'USD Coin (USDC)', 'Compound USD Coin (cUSDC)', 'Compound USDT (cUSDT)'], ['Tether USD (USDT)', 'QASH (QASH)', 'ChainLink Token (LINK)', 'USD Coin (USDC)', 'Celsius (CEL)', 'DEXA COIN (DEXA)', 'FTT (FTX Token)', 'Mass Vehicle Ledger Token (MVL)', 'OMG Network: OMG Token', 'Maker (MKR)', 'Synthetix Network Token (SNX)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)'], ['Hop Protocol: Ethereum Bridge', 'USD Coin (USDC)', 'Gemini 4'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Compound USD Coin (cUSDC)', 'Uniswap V2: Router 2'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Bitstamp 2'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'ParaSwap (PSP)', 'Tidal Token (TIDAL)', 'BitDAO: BIT Token'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'ChainLink Token (LINK)'], ['1inch v4: Router', 'Arbitrum One: L1 Gateway Router', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'Tether USD (USDT)', 'Liquity LUSD: LUSD Token', 'Synapse: Bridge', 'stETH (stETH)', 'Lido: Curve Liquidity Farming Pool Contract', 'Wyvern Exchange Contract (-)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Bitcoin Suisse: Eth2 Depositor 4'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'VIN (VIN)', 'OMG Network: OMG Token'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['Wrapped BTC (WBTC)', 'AnySwap: ANY Token', 'Wrapped Ether', 'USD Coin (USDC)', 'Tether USD (USDT)', 'Dai Stablecoin (DAI)', 'Frax (FRAX)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Wrapped UST Token (UST)', 'UST (Wormhole) (UST)'], ['USD Coin (USDC)', 'Compound USD Coin (cUSDC)'], ['USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'Uniswap V2: Router 2', 'Metamask: Swap Router', 'Maker (MKR)'], ['USD Coin (USDC)', 'Pax Dollar (USDP)'], ['Uniswap V2: Router 2', 'Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['1inch v4: Router', 'Tether USD (USDT)', 'Uniswap V2: Router 2', 'USD Coin (USDC)', 'Compound USD Coin (cUSDC)', 'USDC yVault (yvUSDC)', '1inch v3', 'Compound (COMP)', '1inch Network v2'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Dai Stablecoin (DAI)', 'Optimism: Gateway', 'Convex Finance: Booster', 'Synthetix Network Token (SNX)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Wrapped Ether', 'Spell Token (SPELL)', 'Dai Stablecoin (DAI)', 'Wrapped BTC (WBTC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Aave Token (AAVE)', 'Compound (COMP)', 'SushiToken (SUSHI)', 'Uniswap (UNI)'], ['USD Coin (USDC)', 'Synapse (SYN)', 'Synapse: Bridge', 'Dai Stablecoin (DAI)', 'Wrapped Ether', 'Wrapped BTC (WBTC)', 'SushiSwap: Merkle Distributor', 'Optimism: Gateway', 'SushiToken (SUSHI)', 'Maker: Proxy Registry', 'OpenSea: Wyvern Exchange v1', 'Tether USD (USDT)', 'ChainLink Token (LINK)', 'Aave Token (AAVE)', 'Synthetix Network Token (SNX)', 'Aave interest bearing SNX (aSNX)', 'Bancor (BNT)'], ['Ethereum Name Service (ENS)'], ['USD Coin (USDC)', 'Compound USD Coin (cUSDC)', 'Compound USDT (cUSDT)', 'Compound: cETH Token', 'Dai Stablecoin (DAI)', 'Tether USD (USDT)', 'BlockFi 4'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Metamask: Swap Router', '1inch v4: Router'], ['USD Coin (USDC)', 'Metamask: Swap Router', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Convex Finance: Booster'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['Synth sUSD (sUSD)', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'Tether USD (USDT)'], ['USD Coin (USDC)', '1inch v4: Router', 'Metamask: Swap Router', 'Tether USD (USDT)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Aave interest bearing USDT (aUSDT)', 'Uniswap (UNI)', 'IDEX Token (IDEX)', 'Synthetix Network Token (SNX)', 'Livepeer Token (LPT)', 'Wrapped Ether', '1INCH Token (1INCH)', 'Dai Stablecoin (DAI)', 'SushiToken (SUSHI)', 'mStable USD (mUSD)', 'bZx Protocol Token', '1inch Network: CHI Token', 'HEX (HEX)', 'Ampleforth (AMPL)', 'ChainLink Token (LINK)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'LooksRare: Fee Sharing', 'Metamask: Swap Router', 'TrueGBP (TGBP)', 'Lido: Curve Liquidity Farming Pool Contract'], ['USD Coin (USDC)'], ['Aave interest bearing WETH (aWETH)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Wrapped Ether', '@EthernityChain $ERN Token (ERN)', 'Aave Token (AAVE)', 'BandToken (BAND)', 'EnjinCoin (ENJ)', 'Decentraland (MANA)', 'Republic (REN)', 'Graph Token (GRT)', 'SushiToken (SUSHI)', 'OriginToken (OGN)', 'Synthetix Network Token (SNX)', 'ChainLink Token (LINK)', 'Aave: aMANA Token V1', 'Aave: aLINK Token V1', 'Aave: aAAVE Token V1', 'Uniswap V2: Router 2', 'Index Coop: ETH 2x Flexible Leverage Index', '1INCH Token (1INCH)', 'Wrapped BTC (WBTC)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'CoinList 1'], ['Uniswap V2: Router 2', '1inch v3', 'USD Coin (USDC)', '1inch v4: Router', 'Dai Stablecoin (DAI)', 'Tether USD (USDT)', 'stETH (stETH)'], ['1inch v4: Router', 'Tether USD (USDT)', 'USD Coin (USDC)', '1inch v3', 'Metamask: Swap Router', 'Uniswap V2: Router 2', 'Bitstamp 2'], ['USD Coin (USDC)'], ['Wrapped UST Token (UST)', 'USD Coin (USDC)', 'UST (Wormhole) (UST)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Decentraland (MANA)', 'ApeCoin (APE)', 'SushiToken (SUSHI)', 'Axie Infinity Shard (AXS)'], ['USD Coin (USDC)', 'UST (Wormhole) (UST)', 'Wrapped UST Token (UST)'], ['USD Coin (USDC)'], ['1inch v3'], ['USD Coin (USDC)', 'Wrapped BTC (WBTC)', 'Tether USD (USDT)', 'Kyber Swap: Reward Locker', 'Kyber Swap: Router', 'Kyber Network: Rainmaker'], ['Dai Stablecoin (DAI)', 'USD Coin (USDC)'], ['Dai Stablecoin (DAI)', 'USD Coin (USDC)', 'PoolTogether: DAI Prize Pool'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Metamask: Swap Router'], ['USD Coin (USDC)', '1inch v4: Router', 'Aave interest bearing WETH (aWETH)', 'Wrapped BTC (WBTC)', '1inch v3'], ['USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'Uniswap V2: Router 2', 'Compound USD Coin (cUSDC)', 'Wrapped BTC (WBTC)', 'Convex Finance: Claim Zap', 'OpenSea: Wyvern Exchange v1', 'Wrapped Ether'], ['USD Coin (USDC)'], ['Wrapped BTC (WBTC)', 'USD Coin (USDC)', 'Uniswap V2: Router 2'], ['Metamask: Swap Router', 'Tether USD (USDT)', 'Uniswap V2: Router 2', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Dai Stablecoin (DAI)'], ['Dai Stablecoin (DAI)', 'USD Coin (USDC)', '1INCH Token (1INCH)', '1inch.exchange', 'Uniswap (UNI)', 'Uniswap V2: Router 2', 'Uniswap: Token Distributor'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Compound USD Coin (cUSDC)', 'Lido: Curve Liquidity Farming Pool Contract', '1inch v4: Router', 'Compound: cETH Token', 'Wrapped BTC (WBTC)', 'Synthetix Network Token (SNX)', 'Synth sUSD (sUSD)', 'UST (Wormhole) (UST)', 'stETH (stETH)'], ['Synapse (SYN)', 'USD Coin (USDC)', 'CRYPTOPUNKS (Ͼ)'], ['Tether USD (USDT)', 'Dai Stablecoin (DAI)', 'Lido: Curve Liquidity Farming Pool Contract', 'stETH (stETH)', 'Uniswap V2: Router 2', 'Optimism: Gateway', 'Aave interest bearing USDC (aUSDC)'], ['HEX (HEX)', 'USD Coin (USDC)', 'Metamask: Swap Router'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['Gem: GemSwap 2'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Terra Virtua Kolect (TVK)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'EnjinCoin (ENJ)'], ['Tether USD (USDT)', '1inch v4: Router', 'Cronos Coin (CRO)', 'Fake_Phishing5401', 'Nexo (NEXO)', '1inch v3', 'USD Coin (USDC)', 'USDC yVault (yvUSDC)', 'Wrapped BTC (WBTC)', '1inch Network v2', 'Uniswap (UNI)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', '1inch v4: Router', 'Dai Stablecoin (DAI)'], ['Tether USD (USDT)', 'Binance USD (BUSD)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Ethereum Name Service (ENS)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['Gem: GemSwap 2', 'LooksRare: Exchange'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Neo Tokyo: NTCTZN Token', 'Wrapped Ether', 'Uniswap V2: Router 2'], ['ChainLink Token (LINK)', 'USD Coin (USDC)', 'Tether USD (USDT)', 'Decentraland (MANA)'], ['stETH (stETH)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Uniswap V2: Router 2', 'Uniswap (UNI)', 'Binance USD (BUSD)', 'Wrapped Ether', 'Pax Dollar (USDP)', 'Maker (MKR)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'LooksRare: Exchange', 'BAT (BAT)', 'Metamask: Swap Router', 'Gem: GemSwap 2', 'Tether USD (USDT)'], [], ['stETH (stETH)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], [], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['SushiToken (SUSHI)', 'USD Coin (USDC)', '1inch v4: Router', 'Uniswap V2: Router 2', 'Dai Stablecoin (DAI)', '1inch v3', 'Metamask: Swap Router'], ['USD Coin (USDC)', 'BAT (BAT)', 'ChainLink Token (LINK)'], ['Tether USD (USDT)', 'Wrapped UST Token (UST)', 'Dai Stablecoin (DAI)', 'Frax (FRAX)', 'USD Coin (USDC)', 'Spell Token (SPELL)', '1inch v4: Router'], ['USD Coin (USDC)', 'Temple (TEMPLE)', 'Ethereum Name Service (ENS)', 'Tether USD (USDT)', 'Wrapped Ether'], ['USD Coin (USDC)'], ['ChainLink Token (LINK)', 'USD Coin (USDC)', 'Compound (COMP)', 'SushiToken (SUSHI)'], ['Metamask: Swap Router', 'USD Coin (USDC)'], [], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], [], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['Tether USD (USDT)', 'Wrapped UST Token (UST)', 'USD Coin (USDC)'], ['Uniswap V2: Router 2', 'USD Coin (USDC)', 'Tether USD (USDT)', 'Dai Stablecoin (DAI)'], ['Spell Token (SPELL)', 'Convex Finance: Booster', 'USD Coin (USDC)', 'Convex Finance: Claim Zap'], ['USD Coin (USDC)', 'OpenSea Shared Storefront (OPENSTORE)', 'Wyvern Exchange Contract (-)', 'Wrapped Ether', 'Art Blocks (BLOCKS)', 'OpenSea: Registry'], ['Wrapped Ether', 'Uniswap V2: Router 2', 'USD Coin (USDC)', 'HEX (HEX)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Uniswap V2: Router 2'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'LooksRare: Fee Sharing', 'LooksRare: Aggregator Fee Sharing Uniswap V3', 'LooksRare Token (LOOKS)', 'SushiToken (SUSHI)', 'mStable USD (mUSD)', 'Wrapped UST Token (UST)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['1inch v4: Router', 'Tether USD (USDT)', 'USD Coin (USDC)', 'Wrapped BTC (WBTC)', 'Wrapped Ether', 'Lido: Curve Liquidity Farming Pool Contract', 'Lido DAO Token (LDO)', 'Spell Token (SPELL)', 'Convex Finance: Booster'], ['Dai Stablecoin (DAI)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'USDC yVault (yvUSDC)'], ['USD Coin (USDC)', 'ChainLink Token (LINK)'], ['USD Coin (USDC)', 'Wyvern Exchange Contract (-)', 'Wrapped Ether', 'OpenSea: Wyvern Exchange v1', 'LooksRare: Exchange'], ['USD Coin (USDC)'], [], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Rock: Old Token', 'SENTINEL PROTOCOL (UPP)', 'Uppsala: Token Sale'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Compound USDT (cUSDT)'], ['1inch v4: Router', 'USD Coin (USDC)', 'Optimism: Gateway', 'Wrapped BTC (WBTC)', 'Dai Stablecoin (DAI)', 'Tether USD (USDT)', 'Balancer (BAL)', 'Wrapped Ether'], ['Tether USD (USDT)', 'Wrapped Ether', 'PoolTogether (POOL)', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'Livepeer Token (LPT)', 'Uniswap V2: Router 2', 'Pax Dollar (USDP)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Gemini dollar (GUSD)', '1inch v3', 'BlockFi 4', 'Wrapped Ether', 'Uniswap V2: Router 2', 'LoopringCoin V2 (LRC)', 'Value Liquidity (VALUE)'], ['1inch v3', 'Tether USD (USDT)', 'Swipe (SXP)', 'FTT (FTX Token)'], ['Metamask: Swap Router', 'dYdX (DYDX)', 'Wrapped BTC (WBTC)', 'USD Coin (USDC)', 'LooksRare Token (LOOKS)', 'LooksRare: Aggregator Fee Sharing Uniswap V3', 'Tether USD (USDT)'], ['Synthetix Network Token (SNX)', 'USD Coin (USDC)', 'Tether USD (USDT)', 'Hxro (HXRO)', 'Uniswap V2: Router 2'], ['1inch v4: Router', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Bitcoin Suisse: Eth2 Depositor 4', 'ChainLink Token (LINK)'], ['1inch v4: Router', 'USD Coin (USDC)', 'Tether USD (USDT)', 'Convex Finance: Claim Zap', 'Frax (FRAX)', 'OriginToken (OGN)'], ['Neos Credits (NCR)', 'OpenSea: Wyvern Exchange v1', 'Uniswap V2: Router 2'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Metamask: Swap Router', 'Wrapped UST Token (UST)', 'Uniswap V2: Router 2'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', '1inch v4: Router'], ['USD Coin (USDC)', '1inch v3', 'Dai Stablecoin (DAI)', '1inch Network v2', 'Wrapped Ether'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', '1inch v3', 'Uniswap V2: Router 2'], ['Gemini 4', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Convex Finance: Booster', '1inch v4: Router', 'UST (Wormhole) (UST)', 'Wrapped UST Token (UST)', 'Wrapped Ether', 'LooksRare Token (LOOKS)', 'LooksRare: Fee Sharing', '1inch v3', 'Uniswap V2: Router 2'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'ChainLink Token (LINK)'], ['USD Coin (USDC)'], ['ChainLink Token (LINK)', 'USD Coin (USDC)', 'BlockFi 4', 'Dai Stablecoin (DAI)', '1inch v4: Router'], ['USD Coin (USDC)'], ['LooksRare: Exchange'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Wrapped BTC (WBTC)', 'Wyvern Exchange Contract (-)', '1inch v4: Router', 'Dai Stablecoin (DAI)', 'Tether USD (USDT)'], ['Graph Token (GRT)', 'Aave Token (AAVE)', 'ChainLink Token (LINK)', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'Tether USD (USDT)', '1inch v4: Router', 'LUKSO: LYXe Token', 'FTT (FTX Token)', 'Alchemist (⚗️)', 'EnjinCoin (ENJ)', 'Republic (REN)', 'OriginToken (OGN)'], ['Metamask: Swap Router', 'Wrapped BTC (WBTC)', '1inch v4: Router', 'LUKSO: LYXe Token', 'Metaverse Index (MVI)', 'Index Coop: ETH 2x Flexible Leverage Index', 'USD Coin (USDC)', 'Index Coop: INDEX Token', 'Hxro (HXRO)', 'Rarible (RARI)', 'Uniswap V2: Router 2', 'FOX (FOX)', 'Uniswap (UNI)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['1inch v4: Router', 'Tether USD (USDT)', 'Metamask: Swap Router', 'USD Coin (USDC)', 'Ultra Token (UOS)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Ultra Token (UOS)', 'ChainLink Token (LINK)'], ['ChainLink Token (LINK)', 'Dai Stablecoin (DAI)', 'Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['ChainLink Token (LINK)', 'Uniswap (UNI)', 'USD Coin (USDC)', 'Tether USD (USDT)', 'Wrapped BTC (WBTC)'], ['sudoswap: Pair Router', 'Beanstalk: Beanstalk Protocol', 'Manifold Finance (FOLD)', 'Tether USD (USDT)', 'Arbitrum One: L1 Gateway Router', 'Convex Finance: Booster', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Optimism: Gateway', 'Celer Network: CELR Token', 'Wrapped BTC (WBTC)', 'Ribbon Finance: ETH Put-Selling Vault V2', 'Balancer (BAL)', 'Wrapped Ether', 'Tether USD (USDT)', 'Ribbon (RBN)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Convex Finance: Booster', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Uniswap V2: Router 2', 'Mainframe Token (MFT)', 'Gemini 4', 'BlockFi 4', 'Trace (TRAC)', '1INCH Token (1INCH)', 'Bancor (BNT)', 'Synthetix Network Token (SNX)', '1inch v3', 'Aave Token (AAVE)', 'ChainLink Token (LINK)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Pax Dollar (USDP)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'ChainLink Token (LINK)'], ['USD Coin (USDC)', '1inch v4: Router', 'Synapse: Bridge', 'Wrapped Ether', 'Wrapped UST Token (UST)', 'UST (Wormhole) (UST)', 'Convex Finance: Claim Zap', 'Dai Stablecoin (DAI)', 'Convex Finance: Booster', 'Tether USD (USDT)', 'Binance USD (BUSD)', 'USDC yVault (yvUSDC)'], ['USD Coin (USDC)', 'Litentry (LIT)', 'ChainLink Token (LINK)', 'Reserve Rights (RSR)', 'Republic (REN)', 'AlphaToken (ALPHA)'], ['USD Coin (USDC)', 'Tether USD (USDT)', '1INCH Token (1INCH)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Optimism: Gateway', 'Tether USD (USDT)', 'Lido DAO Token (LDO)', 'Convex Finance: Booster', 'STASIS EURS Token (EURS)', 'Wyvern Exchange Contract (-)', '1inch v4: Router', 'Wrapped Ether'], ['Wrapped BTC (WBTC)', 'Optimism: Gateway', 'USD Coin (USDC)', 'Arbitrum One: L1 Gateway Router', 'Wrapped Ether'], ['USD Coin (USDC)'], ['BlockFi 4', 'USD Coin (USDC)', 'Wrapped BTC (WBTC)', 'CoinList 1'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Uniswap V2: Router 2', 'DEUS (DEUS)', 'Wrapped BTC (WBTC)'], ['USD Coin (USDC)', 'dYdX (DYDX)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'OMG Network: OMG Token', 'BAT (BAT)', 'GSENetwork (GSE)', 'Arcona Distribution Contract (ARCONA)'], ['USD Coin (USDC)', 'Celer Network: CELR Token', '1inch v4: Router'], ['USD Coin (USDC)'], ['Metamask: Swap Router', 'USD Coin (USDC)', 'Chain (XCN)', 'ApeCoin (APE)'], ['Tether USD (USDT)', '1inch v4: Router', 'Bitstamp 2', 'Synapse: Bridge', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Wrapped Ether', '1inch v4: Router', 'UST (Wormhole) (UST)', 'Wyvern Exchange Contract (-)', 'OpenSea: Registry', 'OpenSea: Wyvern Exchange v1', 'Tether USD (USDT)', 'Dai Stablecoin (DAI)'], ['CoinList 1', 'USD Coin (USDC)', 'Tether USD (USDT)'], ['Tether USD (USDT)', 'Wrapped Ether', 'USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['1inch v4: Router', 'Melon Token (MLN)', 'Tribe (TRIBE)', 'Aave Token (AAVE)', 'SushiToken (SUSHI)', '1inch v3', 'Bancor (BNT)', 'ParaSwap P4', 'Uniswap V2: Router 2', '1inch Network v2', 'Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['1inch v4: Router', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Vesper Finance: vETH Token'], ['1inch v4: Router', 'Rocket Pool (RPL)', 'USD Coin (USDC)', 'Ethereum Name Service (ENS)', 'Tether USD (USDT)'], ['CoinList 1', 'USD Coin (USDC)', '1inch v4: Router', 'Dai Stablecoin (DAI)', 'NuNet Utility Token (NTX)', 'MANTRA DAO (OM)', 'Singularity Dao (SDAO)', 'ZRX (ZRX)', 'Mainframe Token (MFT)', 'Wrapped BTC (WBTC)', 'Wrapped Ether', 'Wrapped UST Token (UST)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Axie Infinity Shard (AXS)', 'Tether USD (USDT)', 'Illuvium (ILV)'], ['USD Coin (USDC)', 'sudoswap: Pair Router', 'Lido DAO Token (LDO)', 'Tether USD (USDT)', 'Yield Guild Games Token (YGG)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], [], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Synapse: Bridge', 'LooksRare Token (LOOKS)', 'Gem: GemSwap 2', 'sudoswap: Pair Router', 'Rarible: Exchange Proxy'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Decentraland (MANA)'], ['USD Coin (USDC)'], ['1inch v4: Router'], ['Wrapped Ether', 'Uniswap V2: Router 2', 'Compound USD Coin (cUSDC)', 'Dai Stablecoin (DAI)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Wrapped Ether', '1inch v4: Router', 'Hop Protocol: Ethereum Bridge', 'Lido: Curve Liquidity Farming Pool Contract', 'Convex Finance: Booster', 'stETH (stETH)', 'Arbitrum One: L1 Gateway Router', 'OpenSea: Wyvern Exchange v1', 'ParaSwap (PSP)', '1inch v3', 'Lido DAO Token (LDO)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)', '1inch Network v2', '1INCH Token (1INCH)', 'Dai Stablecoin (DAI)', '1inch.exchange', 'DGD (DGD)', 'Maker: Proxy Registry'], ['EnjinCoin (ENJ)', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'Aave interest bearing USDC (aUSDC)'], ['USD Coin (USDC)', 'Ethereum Name Service (ENS)'], ['Binance USD (BUSD)', 'USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], [], ['UST (Wormhole) (UST)', 'USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'OpenSea Shared Storefront (OPENSTORE)'], ['USD Coin (USDC)', 'Wrapped Ether', 'Wrapped BTC (WBTC)'], ['USD Coin (USDC)', 'Uniswap V2: Router 2', 'XDEFI (XDEFI)', 'AnySwap: ANY Token', 'Artificial Liquid Intelligence Toke... (ALI)'], ['USD Coin (USDC)'], ['1inch v4: Router', 'USD Coin (USDC)', 'ChainLink Token (LINK)', 'Liquity LUSD: LUSD Token', 'Uniswap V2: Router 2', '1inch v3'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Wrapped BTC (WBTC)'], ['USD Coin (USDC)', 'BlockFi 4', 'Wrapped Ether', 'Wrapped UST Token (UST)', 'OpenSea: Wyvern Exchange v1'], ['USD Coin (USDC)', 'Wrapped BTC (WBTC)', 'Dai Stablecoin (DAI)', 'Tether USD (USDT)'], ['Pax Dollar (USDP)', 'USD Coin (USDC)'], ['Uniswap V2: Router 2', 'Dai Stablecoin (DAI)', 'USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Aave Token (AAVE)'], [], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Dai Stablecoin (DAI)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['1inch v4: Router', 'Metamask: Swap Router', '1inch v3'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Gemini 4'], ['USD Coin (USDC)', 'Decentraland (MANA)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'ChainLink Token (LINK)'], ['USD Coin (USDC)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Decentraland (MANA)', 'Tether USD (USDT)', 'ChainLink Token (LINK)', 'Fantom Token (FTM)', 'Nexo (NEXO)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Illuvium: Migrate', 'Illuvium: ILV Core Pool', 'THORChain ETH.RUNE (RUNE)', 'USD Coin (USDC)', 'Uniswap V2: Router 2', 'Dopex Governance Token (DPX)', 'Illuvium (ILV)', 'Premia (PREMIA)', 'Synthetix Network Token (SNX)'], ['USD Coin (USDC)'], ['1inch v4: Router', 'USD Coin (USDC)', 'Binance USD (BUSD)'], ['Synapse: Bridge', 'Synthetix Network Token (SNX)', 'Lido DAO Token (LDO)', 'Frax (FRAX)', 'Aura: Airdrops', 'Convex Finance: Booster', 'USD Coin (USDC)'], ['Compound USD Coin (cUSDC)', 'USD Coin (USDC)', 'ChainLink Token (LINK)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['ENS: Bulk Renewal', 'USD Coin (USDC)', 'Wyvern Exchange Contract (-)', 'Wrapped Ether', 'Gem: GemSwap 2', 'Ethereum Name Service (ENS)', 'AudioGlyphs', 'OpenSea: Wyvern Exchange v1', 'LooksRare: Exchange', 'Art Blocks (BLOCKS)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['1inch v4: Router', 'Metamask: Swap Router'], ['USD Coin (USDC)', 'Republic (REN)', 'Graph Token (GRT)', 'Trace (TRAC)', 'LoopringCoin V2 (LRC)', 'ChainLink Token (LINK)', 'FOAM Token (FOAM)', 'COTI Token (COTI)', 'OriginToken (OGN)', 'Synthetix Network Token (SNX)', 'Decentraland (MANA)', 'EnjinCoin (ENJ)', 'SushiToken (SUSHI)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['Art Blocks (BLOCKS)', 'USD Coin (USDC)', '1inch v4: Router', 'Tether USD (USDT)', 'Aave Token (AAVE)', 'Wyvern Exchange Contract (-)', 'Aurora (AURORA)', 'Balancer (BAL)', 'Wrapped Ether'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Metamask: Swap Router'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Lido: Curve Liquidity Farming Pool Contract', 'Wrapped UST Token (UST)', 'CoinList 1', 'Convex Finance: Booster', 'stETH (stETH)'], ['stETH (stETH)', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'Uniswap: Token Distributor', 'USD Coin (USDC)', 'Ethereum Name Service (ENS)', 'Uniswap V2: Router 2', 'SushiToken (SUSHI)', 'Uniswap (UNI)', 'Aave Token (AAVE)', 'Compound (COMP)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'stETH (stETH)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Convex Finance: Booster', 'Dai Stablecoin (DAI)', '1inch v4: Router', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'ChainLink Token (LINK)', 'Tether USD (USDT)', 'Wrapped BTC (WBTC)', 'Lido DAO Token (LDO)'], ['USD Coin (USDC)', '1inch v4: Router', 'Frax (FRAX)', 'Uniswap V2: Router 2'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Celsius (CEL)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Uniswap V2: Router 2', 'ChainLink Token (LINK)', 'Republic (REN)', 'Bitcoin Suisse: Eth2 Depositor 4'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['UST (Wormhole) (UST)'], ['USD Coin (USDC)', 'Wrapped BTC (WBTC)', 'ApeCoin (APE)', 'Decentraland (MANA)', 'Uniswap (UNI)'], ['USD Coin (USDC)', 'LABS Group (LABS)', 'Tether USD (USDT)', 'Uniswap V2: Router 2'], ['Wyvern Exchange Contract (-)', 'Wrapped Ether', 'OpenSea: Wyvern Exchange v1', 'OpenSea: Registry'], ['USD Coin (USDC)', 'LooksRare Token (LOOKS)', 'LooksRare: Airdrop', 'Ethereum Name Service (ENS)', 'OpenSea: Wyvern Exchange v1', 'Wrapped Ether', 'OpenSea: Registry'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Wrapped Ether', 'USD Coin (USDC)', 'LooksRare Token (LOOKS)', 'LooksRare: Fee Sharing', 'Tether USD (USDT)', 'Wrapped BTC (WBTC)', 'Nomad: ERC20 Bridge', 'Nomad: Bridge', 'LooksRare: Airdrop', 'Uniswap V2: Router 2', 'OMG Network: OMG Token'], ['USD Coin (USDC)', 'Tether USD (USDT)', 'Wrapped UST Token (UST)'], ['USD Coin (USDC)', '1inch Network v2', '1INCH Token (1INCH)', '1inch.exchange'], ['Wormhole: LUNA Token', 'Metamask: Swap Router', 'UST (Wormhole) (UST)', 'USD Coin (USDC)', 'Uniswap V2: Router 2', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['1inch v4: Router', 'Synthetix Network Token (SNX)'], ['USD Coin (USDC)', 'Tether USD (USDT)', '1inch v3'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Uniswap V2: Router 2', 'USD Coin (USDC)'], ['USD Coin (USDC)'], ['Ribbon Finance: ETH Put-Selling Vault V2', 'Ribbon Finance: ETH Put-Selling yvUSDC Vault V2', 'USD Coin (USDC)', 'Uniswap V2: Router 2'], ['USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['BlockFi 4', 'USD Coin (USDC)'], ['Tether USD (USDT)', 'USD Coin (USDC)', 'Frax (FRAX)', 'Binance USD (BUSD)', 'Dai Stablecoin (DAI)', 'Litentry (LIT)', 'Nomad: ERC20 Bridge', 'Arbitrum One: L1 Gateway Router', 'Hop Protocol: Ethereum Bridge', 'Metamask: Swap Router'], ['USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'Tether USD (USDT)', 'Fantom Token (FTM)', 'Uniswap V2: Router 2'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'OMG Network: OMG Token'], ['Metamask: Swap Router', 'Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['LCX (LCX)'], ['Gearbox Protocol: Credit Account Mining'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Tether USD (USDT)'], ['Binance USD (BUSD)', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['Tether USD (USDT)', 'USD Coin (USDC)'], ['Uniswap V2: Router 2', '1inch Network v2', 'Wrapped Ether'], [], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Wrapped BTC (WBTC)', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)', 'Wrapped UST Token (UST)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['1inch v4: Router', 'Wrapped BTC (WBTC)', 'OpenSea: Registry', 'Wyvern Exchange Contract (-)', 'Tiger King (TKING)'], ['ApeCoin (APE)', 'OpenSea Shared Storefront (OPENSTORE)', 'USD Coin (USDC)'], ['HEX (HEX)', 'Uniswap V2: Router 2'], ['USD Coin (USDC)', 'KyberNetwork (KNC)', 'HoloToken (HOT)', 'Ultiledger (ULT)', 'VeChain (VEN)', 'QASH (QASH)'], ['USD Coin (USDC)'], ['Wrapped Ether', 'HEX (HEX)', 'Uniswap V2: Router 2', 'Uniswap (UNI)', 'Uniswap: Token Distributor'], ['USD Coin (USDC)', 'Compound: cETH Token', 'Compound USD Coin (cUSDC)', 'Dai Stablecoin (DAI)', 'Wrapped Ether', 'AlphaToken (ALPHA)', 'Liquity: Borrower Operations', 'Metamask: Swap Router', 'Uniswap V2: Router 2', '1INCH Token (1INCH)', 'Empty Set Dollar: ESD Token'], ['1inch v3', 'Tether USD (USDT)', 'USD Coin (USDC)', 'Dai Stablecoin (DAI)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['LooksRare: Exchange', 'Gem: GemSwap 2'], ['USD Coin (USDC)'], [], ['USD Coin (USDC)', '1inch v4: Router', 'EnjinCoin (ENJ)'], ['USD Coin (USDC)'], ['OpenSea Shared Storefront (OPENSTORE)', 'Tether USD (USDT)', 'USD Coin (USDC)'], ['USD Coin (USDC)', 'Wyvern Exchange Contract (-)', 'Gemini 4', 'Spell Token (SPELL)'], ['USD Coin (USDC)', 'Uniswap V2: Router 2'], ['1inch v4: Router', 'Synapse: Bridge', 'Uniswap V2: Router 2', 'Wrapped Ether', 'USD Coin (USDC)', 'Wyvern Exchange Contract (-)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', '1inch v4: Router', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Uniswap V2: Router 2', 'RAZOR (RAZOR)', 'Tether USD (USDT)', 'Virtue Player Points (VPP)'], ['stETH (stETH)', 'USD Coin (USDC)'], ['1inch v4: Router', 'Uniswap V2: Router 2', 'Metamask: Swap Router'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)', 'Wrapped Ether'], ['Bitstamp 2', 'USD Coin (USDC)', 'OMG Network: OMG Token', 'Decentraland (MANA)', 'Modum Token (MOD)', 'Kin (KIN)', 'Tronix (TRX)', 'Etheroll Token'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['Gnosis (GNO)', 'OpenSea Shared Storefront (OPENSTORE)', 'Gem: GemSwap 2', 'Art Blocks (BLOCKS)', 'Wrapped Ether', 'Wyvern Exchange Contract (-)', 'USD Coin (USDC)', 'Ethereum Name Service (ENS)'], ['USD Coin (USDC)', 'Metamask: Swap Router'], ['USD Coin (USDC)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Binance USD (BUSD)'], ['USD Coin (USDC)', 'Aave Token (AAVE)', '1inch v3', 'Melon Token (MLN)', 'Tether USD (USDT)'], ['USD Coin (USDC)'], ['USD Coin (USDC)'], ['USD Coin (USDC)', 'Binance USD (BUSD)', 'Ethereum Name Service (ENS)', 'Uniswap (UNI)', 'Hop Protocol: Ethereum Bridge']]"],"metadata":{"id":"8d_aGiSTLzt-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","df = pd.DataFrame(m)"],"metadata":{"id":"uqJZXXJROSKn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"id":"fJvn-sHqL46Q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["st=time.time()\n","chain_id=str(43114)\n","exch_name=\"sushiswap\"\n","addres=\"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E\"\n","\n","\n","url = \"https://api.covalenthq.com/v1/\"+chain_id+\"/xy=k/\"+exch_name+\"/tokens/address/\"+addres+\"/transactions/?quote-currency=USD&format=JSON&key=ckey_31ce9d97a5a64550b6110c50ac0\"\n","\n","payload={}\n","headers = {}\n","\n","response = requests.request(\"GET\", url, headers=headers, data=payload)\n","#l.append(response.json())\n","en=time.time()-st\n","print(en)\n"," \n","master=[]\n","d=response.json()\n","for i in d['data']['items']:\n","  t1=i['token_0']\n","  t2=i['token_1']\n","  master.append([i['act'],t1['contract_ticker_symbol'],t2['contract_ticker_symbol'],i['token_0_quote_rate'],i['token_1_quote_rate'],chain_id])\n","df = pd.DataFrame(master,columns =['act','t1','t2','t1_price','t2_price','chain_id'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jHNemJIMFO7y","executionInfo":{"status":"ok","timestamp":1661617495647,"user_tz":-330,"elapsed":3910,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"21f9f58c-642e-42a1-b776-f3dc25f0475f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3.4618711471557617\n"]}]},{"cell_type":"code","source":["df"],"metadata":{"id":"KJOGCF99FEYX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" \n","master=[]\n","d=response.json()\n","for i in d['data']['items']:\n","  t1=i['token_0']\n","  t2=i['token_1']\n","  ans=False\n","   \n","  master.append([i['act'],t1['contract_ticker_symbol'],t2['contract_ticker_symbol'],i['token_0_quote_rate'],i['token_1_quote_rate'],ans])\n","df = pd.DataFrame(master,columns =['act','t1','t2','t1_price','t2_price',''])"],"metadata":{"id":"gKTDOxRzDaAi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(m,columns =['act','t1','t2','t1_price','t2_price',''])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gf7wV3DeFfsL","executionInfo":{"status":"ok","timestamp":1661616963003,"user_tz":-330,"elapsed":383,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"1cae321a-8e4b-4ed4-a357-be1b5e81a07a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['ADD_LIQUIDITY', 'WAVAX', 'USDC', 20.703676, 1.0029038, False]\n","['REMOVE_LIQUIDITY', 'WAVAX', 'USDC', 20.703676, 1.0029038, False]\n","['ADD_LIQUIDITY', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'AvSTRM', 'USDC', 0.034047008, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['REMOVE_LIQUIDITY', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['REMOVE_LIQUIDITY', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['REMOVE_LIQUIDITY', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['ADD_LIQUIDITY', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n","['SWAP', 'AvSTRM', 'USDC', 0.034047008, 0.9999315, False]\n","['SWAP', 'WAVAX', 'USDC', 20.201302, 0.9999315, False]\n"]}]},{"cell_type":"code","source":["cr=[]\n","for i in mst1:\n","  cr.append(list(i.values()))"],"metadata":{"id":"N6hYM4gPIiF4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cr=set()\n","for i in mst1:\n"," for j in (list(i.values())[1]):\n","   cr.add(j)"],"metadata":{"id":"qqzrQEyzA0Hr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["len(cr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wLMa0MlHBXDv","executionInfo":{"status":"ok","timestamp":1661616032015,"user_tz":-330,"elapsed":516,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"0019f86e-9891-4e1d-ce6d-232a114c67ec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["210"]},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["print(len(flat_gfg))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RLvzQlNgBzYf","executionInfo":{"status":"ok","timestamp":1661615954812,"user_tz":-330,"elapsed":386,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"a1c33af7-cdb9-4383-8523-9375b51f39b0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["540\n"]}]},{"cell_type":"code","source":["df = pd.DataFrame(m,columns =['gas_spent'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"id":"ZXVyDINv5AEU","executionInfo":{"status":"error","timestamp":1661619358578,"user_tz":-330,"elapsed":398,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"93d98c77-4486-4259-a120-c7fb9204e58a"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAssertionError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36m_finalize_columns_and_data\u001b[0;34m(content, columns, dtype)\u001b[0m\n\u001b[1;32m    905\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 906\u001b[0;31m         \u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_validate_or_indexify_columns\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcontents\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    907\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mAssertionError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36m_validate_or_indexify_columns\u001b[0;34m(content, columns)\u001b[0m\n\u001b[1;32m    954\u001b[0m             raise AssertionError(\n\u001b[0;32m--> 955\u001b[0;31m                 \u001b[0;34mf\"{len(columns)} columns passed, passed data had \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    956\u001b[0m                 \u001b[0;34mf\"{len(content)} columns\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAssertionError\u001b[0m: 1 columns passed, passed data had 22 columns","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-180-a466b9475e2a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mm\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'gas_spent'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, index, columns, dtype, copy)\u001b[0m\n\u001b[1;32m    698\u001b[0m                         \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    699\u001b[0m                         \u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0;31m# type: ignore[arg-type]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 700\u001b[0;31m                         \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    701\u001b[0m                     )\n\u001b[1;32m    702\u001b[0m                     mgr = arrays_to_mgr(\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36mnested_data_to_arrays\u001b[0;34m(data, columns, index, dtype)\u001b[0m\n\u001b[1;32m    481\u001b[0m         \u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mensure_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_fields\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    482\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 483\u001b[0;31m     \u001b[0marrays\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mto_arrays\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    484\u001b[0m     \u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mensure_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    485\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36mto_arrays\u001b[0;34m(data, columns, dtype)\u001b[0m\n\u001b[1;32m    805\u001b[0m         \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_list_to_arrays\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    806\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 807\u001b[0;31m     \u001b[0mcontent\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_finalize_columns_and_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    808\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mcontent\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    809\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36m_finalize_columns_and_data\u001b[0;34m(content, columns, dtype)\u001b[0m\n\u001b[1;32m    907\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mAssertionError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    908\u001b[0m         \u001b[0;31m# GH#26429 do not raise user-facing AssertionError\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 909\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    910\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    911\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcontents\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mcontents\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobject_\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: 1 columns passed, passed data had 22 columns"]}]},{"cell_type":"code","source":["df = pd.DataFrame(cr,columns =['gas_spent','to_address_label','block_signed'])"],"metadata":{"id":"VRP8Fue6kJSJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"gWZytsRyAzPw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"id":"MUfp48_915Go"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(len(cr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U7e1OGzykNdP","executionInfo":{"status":"ok","timestamp":1661612569813,"user_tz":-330,"elapsed":3,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"9b5cd898-4490-489b-e1f6-0476e66d6242"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["400\n"]}]},{"cell_type":"code","source":["cr1=[]\n","for i in mst1:\n","  cr1.append(list(i.values())[1])"],"metadata":{"id":"WrFpVTprlLF6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cr2=[]\n","for i in mst1:\n","  cr2.append(list(i.values())[1:])"],"metadata":{"id":"9re4Lqpi5rhl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in cr2:\n","  print(i)\n","  break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FVaWLQe24keK","executionInfo":{"status":"ok","timestamp":1661613881737,"user_tz":-330,"elapsed":397,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"186e04da-c659-404e-8698-8dd0e47d35b0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['1inch v4: Router', '1inch v4: Router', 'Metamask: Swap Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', 'Metamask: Swap Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', 'Metamask: Swap Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', 'Metamask: Swap Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router'], ['2022-08-27T13:26:08Z', '2022-08-27T13:26:08Z', '2022-08-27T13:23:20Z', '2022-08-27T13:10:51Z', '2022-08-27T13:05:07Z', '2022-08-27T12:29:22Z', '2022-08-27T12:24:56Z', '2022-08-27T12:22:35Z', '2022-08-27T12:21:34Z', '2022-08-27T12:21:34Z', '2022-08-27T12:21:34Z', '2022-08-27T12:10:23Z', '2022-08-27T11:24:27Z', '2022-08-27T11:08:32Z', '2022-08-27T10:21:30Z', '2022-08-27T08:47:21Z', '2022-08-27T08:23:03Z', '2022-08-27T08:19:56Z', '2022-08-27T08:19:23Z', '2022-08-27T08:18:10Z', '2022-08-27T08:08:38Z', '2022-08-27T07:51:30Z', '2022-08-27T07:46:43Z', '2022-08-27T07:32:30Z', '2022-08-27T07:25:59Z', '2022-08-27T07:21:30Z', '2022-08-27T07:08:47Z', '2022-08-27T07:05:31Z', '2022-08-27T06:42:58Z', '2022-08-27T06:35:55Z', '2022-08-27T06:33:59Z', '2022-08-27T06:30:49Z', '2022-08-27T06:01:38Z', '2022-08-27T05:46:34Z', '2022-08-27T05:38:39Z', '2022-08-27T05:21:08Z', '2022-08-27T05:21:08Z', '2022-08-27T05:21:08Z', '2022-08-27T05:20:35Z', '2022-08-27T05:04:04Z', '2022-08-27T04:41:32Z', '2022-08-27T04:04:15Z', '2022-08-27T03:59:47Z', '2022-08-27T03:51:40Z', '2022-08-27T03:41:13Z', '2022-08-27T03:32:17Z', '2022-08-27T02:39:48Z', '2022-08-27T02:32:43Z', '2022-08-27T02:24:31Z', '2022-08-27T02:21:23Z', '2022-08-27T02:12:02Z', '2022-08-27T01:55:29Z', '2022-08-27T01:51:03Z', '2022-08-27T01:23:22Z', '2022-08-27T01:13:42Z', '2022-08-27T01:13:42Z', '2022-08-27T01:13:42Z', '2022-08-27T00:56:33Z', '2022-08-27T00:52:56Z', '2022-08-27T00:42:35Z', '2022-08-27T00:22:01Z', '2022-08-27T00:13:17Z', '2022-08-27T00:06:50Z', '2022-08-27T00:00:37Z', '2022-08-26T23:38:51Z', '2022-08-26T23:38:51Z', '2022-08-26T23:38:51Z', '2022-08-26T23:36:27Z', '2022-08-26T23:36:27Z', '2022-08-26T23:33:42Z', '2022-08-26T23:33:42Z', '2022-08-26T23:33:42Z', '2022-08-26T23:25:00Z', '2022-08-26T23:24:12Z', '2022-08-26T23:24:09Z', '2022-08-26T23:20:40Z', '2022-08-26T23:20:40Z', '2022-08-26T23:17:35Z', '2022-08-26T23:08:12Z', '2022-08-26T23:08:12Z', '2022-08-26T22:51:06Z', '2022-08-26T22:36:45Z', '2022-08-26T22:11:59Z', '2022-08-26T22:11:59Z', '2022-08-26T22:11:59Z', '2022-08-26T22:10:23Z', '2022-08-26T22:07:44Z', '2022-08-26T21:51:14Z', '2022-08-26T21:38:08Z', '2022-08-26T20:42:54Z', '2022-08-26T19:59:42Z', '2022-08-26T19:55:45Z', '2022-08-26T19:52:31Z', '2022-08-26T19:32:43Z', '2022-08-26T19:25:50Z', '2022-08-26T19:06:29Z', '2022-08-26T18:56:14Z', '2022-08-26T18:34:49Z', '2022-08-26T18:34:37Z', '2022-08-26T18:23:47Z']]\n"]}]},{"cell_type":"code","source":["print(i[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cf0RBOfM597f","executionInfo":{"status":"ok","timestamp":1661614016212,"user_tz":-330,"elapsed":396,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"7f26151a-831f-4d5d-ec9e-433ac39bf871"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['1inch v4: Router', '1inch v4: Router', 'Metamask: Swap Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', 'Metamask: Swap Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', 'Metamask: Swap Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', 'Metamask: Swap Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router', '1inch v4: Router']\n"]}]},{"cell_type":"code","source":["print(i[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R3yNQvW16dIo","executionInfo":{"status":"ok","timestamp":1661614093658,"user_tz":-330,"elapsed":376,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"f10a79a2-aebb-4dc4-fdff-f18856cd4adc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['2022-08-27T13:26:08Z', '2022-08-27T13:26:08Z', '2022-08-27T13:23:20Z', '2022-08-27T13:10:51Z', '2022-08-27T13:05:07Z', '2022-08-27T12:29:22Z', '2022-08-27T12:24:56Z', '2022-08-27T12:22:35Z', '2022-08-27T12:21:34Z', '2022-08-27T12:21:34Z', '2022-08-27T12:21:34Z', '2022-08-27T12:10:23Z', '2022-08-27T11:24:27Z', '2022-08-27T11:08:32Z', '2022-08-27T10:21:30Z', '2022-08-27T08:47:21Z', '2022-08-27T08:23:03Z', '2022-08-27T08:19:56Z', '2022-08-27T08:19:23Z', '2022-08-27T08:18:10Z', '2022-08-27T08:08:38Z', '2022-08-27T07:51:30Z', '2022-08-27T07:46:43Z', '2022-08-27T07:32:30Z', '2022-08-27T07:25:59Z', '2022-08-27T07:21:30Z', '2022-08-27T07:08:47Z', '2022-08-27T07:05:31Z', '2022-08-27T06:42:58Z', '2022-08-27T06:35:55Z', '2022-08-27T06:33:59Z', '2022-08-27T06:30:49Z', '2022-08-27T06:01:38Z', '2022-08-27T05:46:34Z', '2022-08-27T05:38:39Z', '2022-08-27T05:21:08Z', '2022-08-27T05:21:08Z', '2022-08-27T05:21:08Z', '2022-08-27T05:20:35Z', '2022-08-27T05:04:04Z', '2022-08-27T04:41:32Z', '2022-08-27T04:04:15Z', '2022-08-27T03:59:47Z', '2022-08-27T03:51:40Z', '2022-08-27T03:41:13Z', '2022-08-27T03:32:17Z', '2022-08-27T02:39:48Z', '2022-08-27T02:32:43Z', '2022-08-27T02:24:31Z', '2022-08-27T02:21:23Z', '2022-08-27T02:12:02Z', '2022-08-27T01:55:29Z', '2022-08-27T01:51:03Z', '2022-08-27T01:23:22Z', '2022-08-27T01:13:42Z', '2022-08-27T01:13:42Z', '2022-08-27T01:13:42Z', '2022-08-27T00:56:33Z', '2022-08-27T00:52:56Z', '2022-08-27T00:42:35Z', '2022-08-27T00:22:01Z', '2022-08-27T00:13:17Z', '2022-08-27T00:06:50Z', '2022-08-27T00:00:37Z', '2022-08-26T23:38:51Z', '2022-08-26T23:38:51Z', '2022-08-26T23:38:51Z', '2022-08-26T23:36:27Z', '2022-08-26T23:36:27Z', '2022-08-26T23:33:42Z', '2022-08-26T23:33:42Z', '2022-08-26T23:33:42Z', '2022-08-26T23:25:00Z', '2022-08-26T23:24:12Z', '2022-08-26T23:24:09Z', '2022-08-26T23:20:40Z', '2022-08-26T23:20:40Z', '2022-08-26T23:17:35Z', '2022-08-26T23:08:12Z', '2022-08-26T23:08:12Z', '2022-08-26T22:51:06Z', '2022-08-26T22:36:45Z', '2022-08-26T22:11:59Z', '2022-08-26T22:11:59Z', '2022-08-26T22:11:59Z', '2022-08-26T22:10:23Z', '2022-08-26T22:07:44Z', '2022-08-26T21:51:14Z', '2022-08-26T21:38:08Z', '2022-08-26T20:42:54Z', '2022-08-26T19:59:42Z', '2022-08-26T19:55:45Z', '2022-08-26T19:52:31Z', '2022-08-26T19:32:43Z', '2022-08-26T19:25:50Z', '2022-08-26T19:06:29Z', '2022-08-26T18:56:14Z', '2022-08-26T18:34:49Z', '2022-08-26T18:34:37Z', '2022-08-26T18:23:47Z']\n"]}]},{"cell_type":"code","source":["da"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":641},"id":"j7ZV66fx1tax","executionInfo":{"status":"ok","timestamp":1661612778389,"user_tz":-330,"elapsed":480,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"6b3d29ef-5089-4ffb-9f98-dc1e4c1aafd0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                               0                  1                      2   \\\n","0                1inch v4: Router   1inch v4: Router  Metamask: Swap Router   \n","1                 USD Coin (USDC)    USD Coin (USDC)        USD Coin (USDC)   \n","2                       HEX (HEX)          HEX (HEX)              HEX (HEX)   \n","3                 USD Coin (USDC)    USD Coin (USDC)   Uniswap V2: Router 2   \n","4            Uniswap V2: Router 2    USD Coin (USDC)   Uniswap V2: Router 2   \n","..                            ...                ...                    ...   \n","95                USD Coin (USDC)    USD Coin (USDC)                   None   \n","96  Hop Protocol: Ethereum Bridge    USD Coin (USDC)        USD Coin (USDC)   \n","97                USD Coin (USDC)    USD Coin (USDC)        USD Coin (USDC)   \n","98              Tether USD (USDT)  Tether USD (USDT)        USD Coin (USDC)   \n","99                USD Coin (USDC)    USD Coin (USDC)        USD Coin (USDC)   \n","\n","                      3                  4                 5   \\\n","0       1inch v4: Router   1inch v4: Router  1inch v4: Router   \n","1      Orchid: OXT Token  Aave Token (AAVE)   USD Coin (USDC)   \n","2          Uniswap (UNI)    USD Coin (USDC)         HEX (HEX)   \n","3        USD Coin (USDC)    USD Coin (USDC)   USD Coin (USDC)   \n","4   Uniswap V2: Router 2    USD Coin (USDC)   USD Coin (USDC)   \n","..                   ...                ...               ...   \n","95                  None               None              None   \n","96       USD Coin (USDC)    USD Coin (USDC)   USD Coin (USDC)   \n","97       USD Coin (USDC)    USD Coin (USDC)   USD Coin (USDC)   \n","98       USD Coin (USDC)    USD Coin (USDC)   USD Coin (USDC)   \n","99       USD Coin (USDC)    USD Coin (USDC)   USD Coin (USDC)   \n","\n","                  6                      7                  8   \\\n","0   1inch v4: Router  Metamask: Swap Router   1inch v4: Router   \n","1    USD Coin (USDC)      Aave Token (AAVE)  Tether USD (USDT)   \n","2          HEX (HEX)        USD Coin (USDC)          HEX (HEX)   \n","3    USD Coin (USDC)        USD Coin (USDC)    USD Coin (USDC)   \n","4    USD Coin (USDC)        USD Coin (USDC)               None   \n","..               ...                    ...                ...   \n","95              None                   None               None   \n","96   USD Coin (USDC)        USD Coin (USDC)    USD Coin (USDC)   \n","97   USD Coin (USDC)        USD Coin (USDC)    USD Coin (USDC)   \n","98   USD Coin (USDC)        USD Coin (USDC)    USD Coin (USDC)   \n","99   USD Coin (USDC)        USD Coin (USDC)    USD Coin (USDC)   \n","\n","                      9   ...    89    90    91    92    93    94    95    96  \\\n","0       1inch v4: Router  ...  None  None  None  None  None  None  None  None   \n","1   Dai Stablecoin (DAI)  ...  None  None  None  None  None  None  None  None   \n","2              HEX (HEX)  ...  None  None  None  None  None  None  None  None   \n","3        USD Coin (USDC)  ...  None  None  None  None  None  None  None  None   \n","4                   None  ...  None  None  None  None  None  None  None  None   \n","..                   ...  ...   ...   ...   ...   ...   ...   ...   ...   ...   \n","95                  None  ...  None  None  None  None  None  None  None  None   \n","96       USD Coin (USDC)  ...  None  None  None  None  None  None  None  None   \n","97       USD Coin (USDC)  ...  None  None  None  None  None  None  None  None   \n","98       USD Coin (USDC)  ...  None  None  None  None  None  None  None  None   \n","99       USD Coin (USDC)  ...  None  None  None  None  None  None  None  None   \n","\n","      97    98  \n","0   None  None  \n","1   None  None  \n","2   None  None  \n","3   None  None  \n","4   None  None  \n","..   ...   ...  \n","95  None  None  \n","96  None  None  \n","97  None  None  \n","98  None  None  \n","99  None  None  \n","\n","[100 rows x 99 columns]"],"text/html":["\n","  <div id=\"df-00b3c937-a108-4616-bc69-1a0d5616ace5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>89</th>\n","      <th>90</th>\n","      <th>91</th>\n","      <th>92</th>\n","      <th>93</th>\n","      <th>94</th>\n","      <th>95</th>\n","      <th>96</th>\n","      <th>97</th>\n","      <th>98</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1inch v4: Router</td>\n","      <td>1inch v4: Router</td>\n","      <td>Metamask: Swap Router</td>\n","      <td>1inch v4: Router</td>\n","      <td>1inch v4: Router</td>\n","      <td>1inch v4: Router</td>\n","      <td>1inch v4: Router</td>\n","      <td>Metamask: Swap Router</td>\n","      <td>1inch v4: Router</td>\n","      <td>1inch v4: Router</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>Orchid: OXT Token</td>\n","      <td>Aave Token (AAVE)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>Aave Token (AAVE)</td>\n","      <td>Tether USD (USDT)</td>\n","      <td>Dai Stablecoin (DAI)</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HEX (HEX)</td>\n","      <td>HEX (HEX)</td>\n","      <td>HEX (HEX)</td>\n","      <td>Uniswap (UNI)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>HEX (HEX)</td>\n","      <td>HEX (HEX)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>HEX (HEX)</td>\n","      <td>HEX (HEX)</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>Uniswap V2: Router 2</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Uniswap V2: Router 2</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>Uniswap V2: Router 2</td>\n","      <td>Uniswap V2: Router 2</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>Hop Protocol: Ethereum Bridge</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>Tether USD (USDT)</td>\n","      <td>Tether USD (USDT)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>USD Coin (USDC)</td>\n","      <td>...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>None</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 99 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00b3c937-a108-4616-bc69-1a0d5616ace5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-00b3c937-a108-4616-bc69-1a0d5616ace5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-00b3c937-a108-4616-bc69-1a0d5616ace5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["items = set()\n","for col in da:\n","    items.update(da[col].unique())\n","print(items)\n","itemset = set(items)\n","\n","encoded_vals = []\n","for index, row in da.iterrows():\n","    rowset = set(row) \n","    labels = {}\n","    uncommons = list(itemset - rowset)\n","    commons = list(itemset.intersection(rowset))\n","    for uc in uncommons:\n","        labels[uc] = 0\n","    for com in commons:\n","        labels[com] = 1\n","    encoded_vals.append(labels)\n","encoded_vals[0]\n","ohe_df = pd.DataFrame(encoded_vals)\n","\n","\n","from mlxtend.frequent_patterns import apriori\n","# the moment we have all been waiting for\n","freq_items = apriori(ohe_df, min_support=0.01, use_colnames=True)\n","freq_items"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":462},"id":"hocIfO4glca5","executionInfo":{"status":"ok","timestamp":1661612897944,"user_tz":-330,"elapsed":476,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"8aa64235-89ce-4253-e300-3af71c9571a6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Frax (FRAX)', 'Lido DAO Token (LDO)', 'Graph Token (GRT)', 'Singularity Dao (SDAO)', 'stETH (stETH)', '1inch v4: Router', 'Uppsala: Token Sale', 'CRYPTOPUNKS (Ͼ)', 'LoopringCoin V2 (LRC)', '1inch Network v2', 'Mainframe Token (MFT)', None, 'Lido: Curve Liquidity Farming Pool Contract', 'OTC: 0x054...58e', 'BandToken (BAND)', 'Illuvium (ILV)', 'SushiSwap: Merkle Distributor', 'mStable USD (mUSD)', 'Alchemist (⚗️)', 'Ultra Token (UOS)', 'XDEFI (XDEFI)', 'Hxro (HXRO)', 'Bitpanda Ecosystem Token (BEST)', 'Bitcoin Suisse: Eth2 Depositor 4', 'tBTC: TBTC Token', 'CoinList 1', 'Orchid: OXT Token', 'Ethereum Name Service (ENS)', 'Keep: TokenGrant', 'Optimism: Gateway', 'FOX (FOX)', 'Uniswap V2: Router 2', 'MEV Bot: 0x000...2D4', 'Kyber Swap: Reward Locker', 'ZRX (ZRX)', 'Maker: Proxy Registry', 'OpenSea Shared Storefront (OPENSTORE)', 'OpenSea: Wyvern Exchange v1', 'Fantom Token (FTM)', '1inch v3', '@EthernityChain $ERN Token (ERN)', 'Uniswap (UNI)', 'Tribe (TRIBE)', 'Gemini dollar (GUSD)', 'SENTINEL PROTOCOL (UPP)', 'MANTRA DAO (OM)', 'Bancor (BNT)', 'Paragons DAO Token (PDT)', 'DEUS (DEUS)', 'Terra Virtua Kolect (TVK)', 'GSENetwork (GSE)', 'EnjinCoin (ENJ)', 'POA Network: AMB-ETH-XDAI', 'Compound (COMP)', 'Compound: cETH Token', 'Aave Token (AAVE)', 'Pax Dollar (USDP)', 'Uniswap: Token Distributor', 'Celsius (CEL)', 'Compound USD Coin (cUSDC)', 'USDC yVault (yvUSDC)', 'Ribbon Finance: ETH Put-Selling Vault V2', 'Synapse: Bridge', 'Neo Tokyo: NTCTZN Token', 'Aave interest bearing WETH (aWETH)', 'chiliZ (CHZ)', 'Convex Finance: Claim Zap', 'AlphaToken (ALPHA)', '1inch.exchange', 'Manifold Finance (FOLD)', 'Melon Token (MLN)', 'QASH (QASH)', 'Axie Infinity Shard (AXS)', 'NuNet Utility Token (NTX)', 'Decentraland (MANA)', 'LooksRare: Fee Sharing', 'Aave: aMANA Token V1', 'LooksRare: Aggregator Fee Sharing Uniswap V3', 'Aave interest bearing USDC (aUSDC)', 'Synth sETH (sETH)', 'TrueGBP (TGBP)', 'STASIS EURS Token (EURS)', 'LooksRare: Exchange', 'Swipe (SXP)', 'VIN (VIN)', 'UST (Wormhole) (UST)', 'ApeCoin (APE)', 'Bitstamp 2', 'DEXA COIN (DEXA)', 'Reputation (REPv2)', 'Chain (XCN)', 'Spell Token (SPELL)', 'Binance USD (BUSD)', 'Rarible: Exchange Proxy', 'KEEP Token (KEEP)', 'sudoswap: Pair Router', 'Aave interest bearing SNX (aSNX)', 'Liquity LUSD: LUSD Token', 'xShib Staked Shiba Inu (xSHIB)', 'Metamask: Swap Router', 'IOSToken (IOST)', 'Art Blocks (BLOCKS)', 'Republic (REN)', 'Nexo (NEXO)', 'Gem: GemSwap 2', 'Arbitrum One: L1 Gateway Router', 'BitDAO: BIT Token', 'ChainLink Token (LINK)', 'BlockFi 4', 'Gemini 4', 'ParaSwap (PSP)', 'Index Coop: ETH 2x Flexible Leverage Index', 'Rocket Pool (RPL)', 'Metaverse Index (MVI)', 'Tidal Token (TIDAL)', 'Kyber Swap: Router', '1INCH Token (1INCH)', 'USD Coin (USDC)', 'Mass Vehicle Ledger Token (MVL)', 'SushiToken (SUSHI)', 'Temple (TEMPLE)', 'Reserve Rights (RSR)', 'SushiSwap: MasterChef LP Staking Pool', 'Synth sUSD (sUSD)', 'Kyber Network: Rainmaker', 'Maker (MKR)', 'Compound USDT (cUSDT)', 'Value Liquidity (VALUE)', 'Convex Finance: Booster', 'Beanstalk: Beanstalk Protocol', 'PoolTogether (POOL)', 'Cronos Coin (CRO)', 'Yield Guild Games Token (YGG)', 'Fake_Phishing5401', 'Arcona Distribution Contract (ARCONA)', 'Tether USD (USDT)', 'Wrapped UST Token (UST)', 'PoolTogether: DAI Prize Pool', 'Synapse (SYN)', 'Balancer (BAL)', 'OpenSea: Registry', 'Neos Credits (NCR)', '1inch Network: CHI Token', 'Hop Protocol: Ethereum Bridge', 'LooksRare Token (LOOKS)', 'Rarible (RARI)', 'Trace (TRAC)', 'Wrapped BTC (WBTC)', 'Rock: Old Token', 'BlockFi 1', 'Ribbon (RBN)', 'DGD (DGD)', 'Dai Stablecoin (DAI)', 'Ampleforth (AMPL)', 'OMG Network: OMG Token', 'Synthetix Network Token (SNX)', 'Wyvern Exchange Contract (-)', 'AnySwap: ANY Token', 'BAT (BAT)', 'Aave: aAAVE Token V1', 'Aave interest bearing USDT (aUSDT)', 'OriginToken (OGN)', 'ParaSwap P4', 'IDEX Token (IDEX)', 'Vesper Finance: vETH Token', 'Aave: aLINK Token V1', 'Artificial Liquid Intelligence Toke... (ALI)', 'HEX (HEX)', 'Litentry (LIT)', 'FTT (FTX Token)', 'Celer Network: CELR Token', 'Wrapped Ether', 'renBTC (renBTC)', 'bZx Protocol Token', 'Index Coop: INDEX Token', 'dYdX (DYDX)', 'LUKSO: LYXe Token', 'Livepeer Token (LPT)'}\n"]},{"output_type":"execute_result","data":{"text/plain":["     support                                           itemsets\n","0     0.0150                                      (Frax (FRAX))\n","1     0.0125                             (Lido DAO Token (LDO))\n","2     0.0150                                (Graph Token (GRT))\n","3     0.0200                                    (stETH (stETH))\n","4     0.0125                                 (1inch Network v2)\n","..       ...                                                ...\n","642   0.0100  (None, 1inch v4: Router, USD Coin (USDC), Unis...\n","643   0.0100  (None, USD Coin (USDC), ChainLink Token (LINK)...\n","644   0.0100  (Synthetix Network Token (SNX), None, USD Coin...\n","645   0.0150  (None, USD Coin (USDC), Wrapped Ether, Wrapped...\n","646   0.0100  (None, 1inch v4: Router, USD Coin (USDC), Wrap...\n","\n","[647 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-b965e1a5-1470-4a44-a5cc-4be21cac2430\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0150</td>\n","      <td>(Frax (FRAX))</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0125</td>\n","      <td>(Lido DAO Token (LDO))</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0150</td>\n","      <td>(Graph Token (GRT))</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0200</td>\n","      <td>(stETH (stETH))</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0125</td>\n","      <td>(1inch Network v2)</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>642</th>\n","      <td>0.0100</td>\n","      <td>(None, 1inch v4: Router, USD Coin (USDC), Unis...</td>\n","    </tr>\n","    <tr>\n","      <th>643</th>\n","      <td>0.0100</td>\n","      <td>(None, USD Coin (USDC), ChainLink Token (LINK)...</td>\n","    </tr>\n","    <tr>\n","      <th>644</th>\n","      <td>0.0100</td>\n","      <td>(Synthetix Network Token (SNX), None, USD Coin...</td>\n","    </tr>\n","    <tr>\n","      <th>645</th>\n","      <td>0.0150</td>\n","      <td>(None, USD Coin (USDC), Wrapped Ether, Wrapped...</td>\n","    </tr>\n","    <tr>\n","      <th>646</th>\n","      <td>0.0100</td>\n","      <td>(None, 1inch v4: Router, USD Coin (USDC), Wrap...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>647 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b965e1a5-1470-4a44-a5cc-4be21cac2430')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b965e1a5-1470-4a44-a5cc-4be21cac2430 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b965e1a5-1470-4a44-a5cc-4be21cac2430');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["from mlxtend.frequent_patterns import apriori\n","# the moment we have all been waiting for\n","freq_items = apriori(ohe_df, min_support=0.05, use_colnames=True)\n","freq_items"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"ZtwNlPB91DBi","executionInfo":{"status":"ok","timestamp":1661613127693,"user_tz":-330,"elapsed":462,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"a3df0737-b2bb-4d1b-a633-3bd3a4e856f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    support                                           itemsets\n","0    0.1350                             (Uniswap V2: Router 2)\n","1    0.0625                           (ChainLink Token (LINK))\n","2    0.9000                                  (USD Coin (USDC))\n","3    0.4250                                (Tether USD (USDT))\n","4    0.0725                               (Wrapped BTC (WBTC))\n","5    0.1400                             (Dai Stablecoin (DAI))\n","6    0.0825                                    (Wrapped Ether)\n","7    0.1175                                 (1inch v4: Router)\n","8    0.0575                            (Metamask: Swap Router)\n","9    0.9975                                             (None)\n","10   0.1200            (Uniswap V2: Router 2, USD Coin (USDC))\n","11   0.0725          (Uniswap V2: Router 2, Tether USD (USDT))\n","12   0.1350                       (Uniswap V2: Router 2, None)\n","13   0.0625          (ChainLink Token (LINK), USD Coin (USDC))\n","14   0.0625                     (ChainLink Token (LINK), None)\n","15   0.4050               (Tether USD (USDT), USD Coin (USDC))\n","16   0.0700              (Wrapped BTC (WBTC), USD Coin (USDC))\n","17   0.1350            (USD Coin (USDC), Dai Stablecoin (DAI))\n","18   0.0800                   (Wrapped Ether, USD Coin (USDC))\n","19   0.1000                (1inch v4: Router, USD Coin (USDC))\n","20   0.9000                            (USD Coin (USDC), None)\n","21   0.0500            (Wrapped BTC (WBTC), Tether USD (USDT))\n","22   0.0850          (Tether USD (USDT), Dai Stablecoin (DAI))\n","23   0.0600              (1inch v4: Router, Tether USD (USDT))\n","24   0.4250                          (Tether USD (USDT), None)\n","25   0.0725                         (Wrapped BTC (WBTC), None)\n","26   0.1400                       (Dai Stablecoin (DAI), None)\n","27   0.0825                              (Wrapped Ether, None)\n","28   0.1175                           (1inch v4: Router, None)\n","29   0.0575                      (Metamask: Swap Router, None)\n","30   0.0650  (Uniswap V2: Router 2, Tether USD (USDT), USD ...\n","31   0.1200      (Uniswap V2: Router 2, USD Coin (USDC), None)\n","32   0.0725    (Uniswap V2: Router 2, Tether USD (USDT), None)\n","33   0.0625    (ChainLink Token (LINK), USD Coin (USDC), None)\n","34   0.0825  (Tether USD (USDT), USD Coin (USDC), Dai Stabl...\n","35   0.0575  (1inch v4: Router, Tether USD (USDT), USD Coin...\n","36   0.4050         (Tether USD (USDT), USD Coin (USDC), None)\n","37   0.0700        (Wrapped BTC (WBTC), USD Coin (USDC), None)\n","38   0.1350      (Dai Stablecoin (DAI), USD Coin (USDC), None)\n","39   0.0800             (Wrapped Ether, USD Coin (USDC), None)\n","40   0.1000          (1inch v4: Router, USD Coin (USDC), None)\n","41   0.0500      (Wrapped BTC (WBTC), Tether USD (USDT), None)\n","42   0.0850    (Dai Stablecoin (DAI), Tether USD (USDT), None)\n","43   0.0600        (1inch v4: Router, Tether USD (USDT), None)\n","44   0.0650  (Uniswap V2: Router 2, Tether USD (USDT), USD ...\n","45   0.0825  (Dai Stablecoin (DAI), Tether USD (USDT), USD ...\n","46   0.0575  (1inch v4: Router, Tether USD (USDT), USD Coin..."],"text/html":["\n","  <div id=\"df-1175817a-c5c4-4623-a485-972ac4a7bffd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.1350</td>\n","      <td>(Uniswap V2: Router 2)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0625</td>\n","      <td>(ChainLink Token (LINK))</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.9000</td>\n","      <td>(USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.4250</td>\n","      <td>(Tether USD (USDT))</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0725</td>\n","      <td>(Wrapped BTC (WBTC))</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.1400</td>\n","      <td>(Dai Stablecoin (DAI))</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.0825</td>\n","      <td>(Wrapped Ether)</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.1175</td>\n","      <td>(1inch v4: Router)</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.0575</td>\n","      <td>(Metamask: Swap Router)</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.9975</td>\n","      <td>(None)</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.1200</td>\n","      <td>(Uniswap V2: Router 2, USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.0725</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT))</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.1350</td>\n","      <td>(Uniswap V2: Router 2, None)</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.0625</td>\n","      <td>(ChainLink Token (LINK), USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.0625</td>\n","      <td>(ChainLink Token (LINK), None)</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.4050</td>\n","      <td>(Tether USD (USDT), USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.0700</td>\n","      <td>(Wrapped BTC (WBTC), USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.1350</td>\n","      <td>(USD Coin (USDC), Dai Stablecoin (DAI))</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.0800</td>\n","      <td>(Wrapped Ether, USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.1000</td>\n","      <td>(1inch v4: Router, USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>0.9000</td>\n","      <td>(USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>0.0500</td>\n","      <td>(Wrapped BTC (WBTC), Tether USD (USDT))</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>0.0850</td>\n","      <td>(Tether USD (USDT), Dai Stablecoin (DAI))</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>0.0600</td>\n","      <td>(1inch v4: Router, Tether USD (USDT))</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>0.4250</td>\n","      <td>(Tether USD (USDT), None)</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>0.0725</td>\n","      <td>(Wrapped BTC (WBTC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0.1400</td>\n","      <td>(Dai Stablecoin (DAI), None)</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0.0825</td>\n","      <td>(Wrapped Ether, None)</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0.1175</td>\n","      <td>(1inch v4: Router, None)</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>0.0575</td>\n","      <td>(Metamask: Swap Router, None)</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>0.0650</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT), USD ...</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>0.1200</td>\n","      <td>(Uniswap V2: Router 2, USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>0.0725</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT), None)</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>0.0625</td>\n","      <td>(ChainLink Token (LINK), USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>0.0825</td>\n","      <td>(Tether USD (USDT), USD Coin (USDC), Dai Stabl...</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>0.0575</td>\n","      <td>(1inch v4: Router, Tether USD (USDT), USD Coin...</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>0.4050</td>\n","      <td>(Tether USD (USDT), USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>0.0700</td>\n","      <td>(Wrapped BTC (WBTC), USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>0.1350</td>\n","      <td>(Dai Stablecoin (DAI), USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>0.0800</td>\n","      <td>(Wrapped Ether, USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>0.1000</td>\n","      <td>(1inch v4: Router, USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>0.0500</td>\n","      <td>(Wrapped BTC (WBTC), Tether USD (USDT), None)</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>0.0850</td>\n","      <td>(Dai Stablecoin (DAI), Tether USD (USDT), None)</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>0.0600</td>\n","      <td>(1inch v4: Router, Tether USD (USDT), None)</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>0.0650</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT), USD ...</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>0.0825</td>\n","      <td>(Dai Stablecoin (DAI), Tether USD (USDT), USD ...</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>0.0575</td>\n","      <td>(1inch v4: Router, Tether USD (USDT), USD Coin...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1175817a-c5c4-4623-a485-972ac4a7bffd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1175817a-c5c4-4623-a485-972ac4a7bffd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1175817a-c5c4-4623-a485-972ac4a7bffd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["freq_items['itemsets']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XfeofNeSsnpf","executionInfo":{"status":"ok","timestamp":1661615462091,"user_tz":-330,"elapsed":4,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"00bd4683-5451-45d3-ceea-012e8f500502"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0                                (Uniswap V2: Router 2)\n","1                              (ChainLink Token (LINK))\n","2                                     (USD Coin (USDC))\n","3                                   (Tether USD (USDT))\n","4                                  (Wrapped BTC (WBTC))\n","5                                (Dai Stablecoin (DAI))\n","6                                       (Wrapped Ether)\n","7                                    (1inch v4: Router)\n","8                               (Metamask: Swap Router)\n","9                                                (None)\n","10              (Uniswap V2: Router 2, USD Coin (USDC))\n","11            (Uniswap V2: Router 2, Tether USD (USDT))\n","12                         (Uniswap V2: Router 2, None)\n","13            (ChainLink Token (LINK), USD Coin (USDC))\n","14                       (ChainLink Token (LINK), None)\n","15                 (Tether USD (USDT), USD Coin (USDC))\n","16                (Wrapped BTC (WBTC), USD Coin (USDC))\n","17              (USD Coin (USDC), Dai Stablecoin (DAI))\n","18                     (Wrapped Ether, USD Coin (USDC))\n","19                  (1inch v4: Router, USD Coin (USDC))\n","20                              (USD Coin (USDC), None)\n","21              (Wrapped BTC (WBTC), Tether USD (USDT))\n","22            (Tether USD (USDT), Dai Stablecoin (DAI))\n","23                (1inch v4: Router, Tether USD (USDT))\n","24                            (Tether USD (USDT), None)\n","25                           (Wrapped BTC (WBTC), None)\n","26                         (Dai Stablecoin (DAI), None)\n","27                                (Wrapped Ether, None)\n","28                             (1inch v4: Router, None)\n","29                        (Metamask: Swap Router, None)\n","30    (Uniswap V2: Router 2, Tether USD (USDT), USD ...\n","31        (Uniswap V2: Router 2, USD Coin (USDC), None)\n","32      (Uniswap V2: Router 2, Tether USD (USDT), None)\n","33      (ChainLink Token (LINK), USD Coin (USDC), None)\n","34    (Tether USD (USDT), USD Coin (USDC), Dai Stabl...\n","35    (1inch v4: Router, Tether USD (USDT), USD Coin...\n","36           (Tether USD (USDT), USD Coin (USDC), None)\n","37          (Wrapped BTC (WBTC), USD Coin (USDC), None)\n","38        (Dai Stablecoin (DAI), USD Coin (USDC), None)\n","39               (Wrapped Ether, USD Coin (USDC), None)\n","40            (1inch v4: Router, USD Coin (USDC), None)\n","41        (Wrapped BTC (WBTC), Tether USD (USDT), None)\n","42      (Dai Stablecoin (DAI), Tether USD (USDT), None)\n","43          (1inch v4: Router, Tether USD (USDT), None)\n","44    (Uniswap V2: Router 2, Tether USD (USDT), USD ...\n","45    (Dai Stablecoin (DAI), Tether USD (USDT), USD ...\n","46    (1inch v4: Router, Tether USD (USDT), USD Coin...\n","Name: itemsets, dtype: object"]},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["from mlxtend.frequent_patterns import apriori\n","# the moment we have all been waiting for\n","freq_items = apriori(ohe_df, min_support=0.05, use_colnames=True)\n","freq_items"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1076},"id":"RLM8H5RTlrEQ","executionInfo":{"status":"ok","timestamp":1661610328125,"user_tz":-330,"elapsed":569,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"529c1077-41a0-44d5-de61-67789e70daad"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    support                                           itemsets\n","0      0.05                               (Binance USD (BUSD))\n","1      0.22                             (Uniswap V2: Router 2)\n","2      0.06                           (ChainLink Token (LINK))\n","3      0.85                                  (USD Coin (USDC))\n","4      0.38                                (Tether USD (USDT))\n","5      0.05                               (Wrapped BTC (WBTC))\n","6      0.10                             (Dai Stablecoin (DAI))\n","7      0.13                                 (1inch v4: Router)\n","8      0.06                            (Metamask: Swap Router)\n","9      0.99                                             (None)\n","10     0.05              (Binance USD (BUSD), USD Coin (USDC))\n","11     0.05                         (Binance USD (BUSD), None)\n","12     0.19            (Uniswap V2: Router 2, USD Coin (USDC))\n","13     0.12          (Uniswap V2: Router 2, Tether USD (USDT))\n","14     0.06           (1inch v4: Router, Uniswap V2: Router 2)\n","15     0.22                       (Uniswap V2: Router 2, None)\n","16     0.06          (ChainLink Token (LINK), USD Coin (USDC))\n","17     0.06                     (ChainLink Token (LINK), None)\n","18     0.35               (Tether USD (USDT), USD Coin (USDC))\n","19     0.10            (USD Coin (USDC), Dai Stablecoin (DAI))\n","20     0.08                (1inch v4: Router, USD Coin (USDC))\n","21     0.85                            (USD Coin (USDC), None)\n","22     0.07          (Tether USD (USDT), Dai Stablecoin (DAI))\n","23     0.38                          (Tether USD (USDT), None)\n","24     0.05                         (Wrapped BTC (WBTC), None)\n","25     0.10                       (Dai Stablecoin (DAI), None)\n","26     0.06          (1inch v4: Router, Metamask: Swap Router)\n","27     0.13                           (1inch v4: Router, None)\n","28     0.06                      (Metamask: Swap Router, None)\n","29     0.05        (Binance USD (BUSD), USD Coin (USDC), None)\n","30     0.10  (Uniswap V2: Router 2, Tether USD (USDT), USD ...\n","31     0.05  (1inch v4: Router, Uniswap V2: Router 2, USD C...\n","32     0.19      (Uniswap V2: Router 2, USD Coin (USDC), None)\n","33     0.12    (Uniswap V2: Router 2, Tether USD (USDT), None)\n","34     0.06     (1inch v4: Router, Uniswap V2: Router 2, None)\n","35     0.06    (ChainLink Token (LINK), USD Coin (USDC), None)\n","36     0.07  (Tether USD (USDT), USD Coin (USDC), Dai Stabl...\n","37     0.35         (Tether USD (USDT), USD Coin (USDC), None)\n","38     0.10      (Dai Stablecoin (DAI), USD Coin (USDC), None)\n","39     0.08          (1inch v4: Router, USD Coin (USDC), None)\n","40     0.07    (Dai Stablecoin (DAI), Tether USD (USDT), None)\n","41     0.06    (1inch v4: Router, Metamask: Swap Router, None)\n","42     0.10  (Uniswap V2: Router 2, Tether USD (USDT), USD ...\n","43     0.05  (1inch v4: Router, Uniswap V2: Router 2, USD C...\n","44     0.07  (Dai Stablecoin (DAI), Tether USD (USDT), USD ..."],"text/html":["\n","  <div id=\"df-da6086ae-a3a4-480a-be5c-96ab54375ec6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.05</td>\n","      <td>(Binance USD (BUSD))</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.22</td>\n","      <td>(Uniswap V2: Router 2)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.06</td>\n","      <td>(ChainLink Token (LINK))</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.85</td>\n","      <td>(USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.38</td>\n","      <td>(Tether USD (USDT))</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.05</td>\n","      <td>(Wrapped BTC (WBTC))</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.10</td>\n","      <td>(Dai Stablecoin (DAI))</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.13</td>\n","      <td>(1inch v4: Router)</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.06</td>\n","      <td>(Metamask: Swap Router)</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.99</td>\n","      <td>(None)</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.05</td>\n","      <td>(Binance USD (BUSD), USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.05</td>\n","      <td>(Binance USD (BUSD), None)</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.19</td>\n","      <td>(Uniswap V2: Router 2, USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.12</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT))</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.06</td>\n","      <td>(1inch v4: Router, Uniswap V2: Router 2)</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.22</td>\n","      <td>(Uniswap V2: Router 2, None)</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.06</td>\n","      <td>(ChainLink Token (LINK), USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.06</td>\n","      <td>(ChainLink Token (LINK), None)</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.35</td>\n","      <td>(Tether USD (USDT), USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.10</td>\n","      <td>(USD Coin (USDC), Dai Stablecoin (DAI))</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>0.08</td>\n","      <td>(1inch v4: Router, USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>0.85</td>\n","      <td>(USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>0.07</td>\n","      <td>(Tether USD (USDT), Dai Stablecoin (DAI))</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>0.38</td>\n","      <td>(Tether USD (USDT), None)</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>0.05</td>\n","      <td>(Wrapped BTC (WBTC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>0.10</td>\n","      <td>(Dai Stablecoin (DAI), None)</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0.06</td>\n","      <td>(1inch v4: Router, Metamask: Swap Router)</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0.13</td>\n","      <td>(1inch v4: Router, None)</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0.06</td>\n","      <td>(Metamask: Swap Router, None)</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>0.05</td>\n","      <td>(Binance USD (BUSD), USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>0.10</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT), USD ...</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>0.05</td>\n","      <td>(1inch v4: Router, Uniswap V2: Router 2, USD C...</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>0.19</td>\n","      <td>(Uniswap V2: Router 2, USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>0.12</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT), None)</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>0.06</td>\n","      <td>(1inch v4: Router, Uniswap V2: Router 2, None)</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>0.06</td>\n","      <td>(ChainLink Token (LINK), USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>0.07</td>\n","      <td>(Tether USD (USDT), USD Coin (USDC), Dai Stabl...</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>0.35</td>\n","      <td>(Tether USD (USDT), USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>0.10</td>\n","      <td>(Dai Stablecoin (DAI), USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>0.08</td>\n","      <td>(1inch v4: Router, USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>0.07</td>\n","      <td>(Dai Stablecoin (DAI), Tether USD (USDT), None)</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>0.06</td>\n","      <td>(1inch v4: Router, Metamask: Swap Router, None)</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>0.10</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT), USD ...</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>0.05</td>\n","      <td>(1inch v4: Router, Uniswap V2: Router 2, USD C...</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>0.07</td>\n","      <td>(Dai Stablecoin (DAI), Tether USD (USDT), USD ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da6086ae-a3a4-480a-be5c-96ab54375ec6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-da6086ae-a3a4-480a-be5c-96ab54375ec6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-da6086ae-a3a4-480a-be5c-96ab54375ec6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["itemset = set(items)\n","\n","encoded_vals = []\n","for index, row in da.iterrows():\n","    rowset = set(row) \n","    labels = {}\n","    uncommons = list(itemset - rowset)\n","    commons = list(itemset.intersection(rowset))\n","    for uc in uncommons:\n","        labels[uc] = 0\n","    for com in commons:\n","        labels[com] = 1\n","    encoded_vals.append(labels)\n","encoded_vals[0]\n","ohe_df = pd.DataFrame(encoded_vals)"],"metadata":{"id":"gi_vdN02lq7d"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","\n","from mlxtend.frequent_patterns import apriori\n","# the moment we have all been waiting for\n","freq_items = apriori(ohe_df, min_support=0.1, use_colnames=True)\n","freq_items.head(7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"Fo5uxJOrl2Tt","executionInfo":{"status":"ok","timestamp":1661608825358,"user_tz":-330,"elapsed":399,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"36bd00cf-816e-4f39-e2fe-dc88a2264e06"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   support                                 itemsets\n","0     0.22                   (Uniswap V2: Router 2)\n","1     0.85                        (USD Coin (USDC))\n","2     0.38                      (Tether USD (USDT))\n","3     0.10                   (Dai Stablecoin (DAI))\n","4     0.13                       (1inch v4: Router)\n","5     0.99                                   (None)\n","6     0.19  (Uniswap V2: Router 2, USD Coin (USDC))"],"text/html":["\n","  <div id=\"df-3852014b-5ce9-439c-a14f-b85d270cbfd8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.22</td>\n","      <td>(Uniswap V2: Router 2)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.85</td>\n","      <td>(USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.38</td>\n","      <td>(Tether USD (USDT))</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.10</td>\n","      <td>(Dai Stablecoin (DAI))</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.13</td>\n","      <td>(1inch v4: Router)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.99</td>\n","      <td>(None)</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.19</td>\n","      <td>(Uniswap V2: Router 2, USD Coin (USDC))</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3852014b-5ce9-439c-a14f-b85d270cbfd8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3852014b-5ce9-439c-a14f-b85d270cbfd8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3852014b-5ce9-439c-a14f-b85d270cbfd8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":[],"metadata":{"id":"hA5_gUnEmhBE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["freq_items"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":708},"id":"khqzaRCCmg4P","executionInfo":{"status":"ok","timestamp":1661608829748,"user_tz":-330,"elapsed":387,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"93fb5c5b-1ab1-4a30-f7dd-85c49a37dfd1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    support                                           itemsets\n","0      0.22                             (Uniswap V2: Router 2)\n","1      0.85                                  (USD Coin (USDC))\n","2      0.38                                (Tether USD (USDT))\n","3      0.10                             (Dai Stablecoin (DAI))\n","4      0.13                                 (1inch v4: Router)\n","5      0.99                                             (None)\n","6      0.19            (Uniswap V2: Router 2, USD Coin (USDC))\n","7      0.12          (Uniswap V2: Router 2, Tether USD (USDT))\n","8      0.22                       (Uniswap V2: Router 2, None)\n","9      0.35               (Tether USD (USDT), USD Coin (USDC))\n","10     0.10            (USD Coin (USDC), Dai Stablecoin (DAI))\n","11     0.85                            (USD Coin (USDC), None)\n","12     0.38                          (Tether USD (USDT), None)\n","13     0.10                       (Dai Stablecoin (DAI), None)\n","14     0.13                           (1inch v4: Router, None)\n","15     0.10  (Uniswap V2: Router 2, Tether USD (USDT), USD ...\n","16     0.19      (Uniswap V2: Router 2, USD Coin (USDC), None)\n","17     0.12    (Uniswap V2: Router 2, Tether USD (USDT), None)\n","18     0.35         (Tether USD (USDT), USD Coin (USDC), None)\n","19     0.10      (Dai Stablecoin (DAI), USD Coin (USDC), None)\n","20     0.10  (Uniswap V2: Router 2, Tether USD (USDT), USD ..."],"text/html":["\n","  <div id=\"df-75ee7f1a-d712-4ce2-b02c-a285a2da377d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>support</th>\n","      <th>itemsets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.22</td>\n","      <td>(Uniswap V2: Router 2)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.85</td>\n","      <td>(USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.38</td>\n","      <td>(Tether USD (USDT))</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.10</td>\n","      <td>(Dai Stablecoin (DAI))</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.13</td>\n","      <td>(1inch v4: Router)</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.99</td>\n","      <td>(None)</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.19</td>\n","      <td>(Uniswap V2: Router 2, USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.12</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT))</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.22</td>\n","      <td>(Uniswap V2: Router 2, None)</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.35</td>\n","      <td>(Tether USD (USDT), USD Coin (USDC))</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.10</td>\n","      <td>(USD Coin (USDC), Dai Stablecoin (DAI))</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.85</td>\n","      <td>(USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.38</td>\n","      <td>(Tether USD (USDT), None)</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.10</td>\n","      <td>(Dai Stablecoin (DAI), None)</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.13</td>\n","      <td>(1inch v4: Router, None)</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.10</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT), USD ...</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.19</td>\n","      <td>(Uniswap V2: Router 2, USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.12</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT), None)</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.35</td>\n","      <td>(Tether USD (USDT), USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.10</td>\n","      <td>(Dai Stablecoin (DAI), USD Coin (USDC), None)</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>0.10</td>\n","      <td>(Uniswap V2: Router 2, Tether USD (USDT), USD ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75ee7f1a-d712-4ce2-b02c-a285a2da377d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-75ee7f1a-d712-4ce2-b02c-a285a2da377d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-75ee7f1a-d712-4ce2-b02c-a285a2da377d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["df.iloc[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EqDApr90lCVK","executionInfo":{"status":"ok","timestamp":1661608432648,"user_tz":-330,"elapsed":552,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"16838836-dbc8-4c40-e850-ad5728ec49b6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["gas_spent                                          120907583223796276\n","to_address_label    [USD Coin (USDC), USD Coin (USDC), USD Coin (U...\n","block_signed        [2022-08-27T08:26:05Z, 2022-08-27T04:27:55Z, 2...\n","Name: 1, dtype: object"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df.to_csv(\"data.csv\")"],"metadata":{"id":"bg96GxTAkLHR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["response.json()"],"metadata":{"id":"VBOpzbPBvzvf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661602628425,"user_tz":-330,"elapsed":405,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"b4bb5005-e8d8-485b-fc2e-dd214376ad1c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'data': {'updated_at': '2022-08-27T12:17:04.090547458Z',\n","  'items': [],\n","  'pagination': {'has_more': False,\n","   'page_number': 0,\n","   'page_size': 100,\n","   'total_count': None}},\n"," 'error': False,\n"," 'error_message': None,\n"," 'error_code': None}"]},"metadata":{},"execution_count":165}]},{"cell_type":"code","source":["\n","\"token 0(sell)\",\"token 1(bought),\"price 1\",\"price2\",\"token used to swap\",\"sushi used\""],"metadata":{"id":"7tbnOumpF3jC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["d"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E_klzkkZGf48","executionInfo":{"status":"ok","timestamp":1661602079020,"user_tz":-330,"elapsed":625,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"ca92a962-f30b-4934-a550-a563d02c07a2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'data': {'updated_at': '2022-08-27T12:07:50.268764300Z',\n","  'items': [],\n","  'pagination': {'has_more': False,\n","   'page_number': 0,\n","   'page_size': 100,\n","   'total_count': None}},\n"," 'error': False,\n"," 'error_message': None,\n"," 'error_code': None}"]},"metadata":{},"execution_count":155}]},{"cell_type":"code","source":[" \n","master=[]\n","for i in d['data']['items']:\n","  t1=i['token_0']\n","  t2=i['token_1']\n","  ans=False\n","  if t1['contract_ticker_symbol']=='SUSHI':\n","    ans=True\n","  master.append([i['act'],t1['contract_ticker_symbol'],t2['contract_ticker_symbol'],i['token_0_quote_rate'],i['token_1_quote_rate'],ans])\n"],"metadata":{"id":"NAqR614CFf5-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for  i in master:\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZwlVErC9ICXl","executionInfo":{"status":"ok","timestamp":1661602014316,"user_tz":-330,"elapsed":483,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"3798f123-5a22-4ec1-bcf9-fce5f56c2859"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['SWAP', 'RUNE', 'SUSHI', 1.9647694, 1.0852392, False]\n","['SWAP', 'SUSHI', 'ILV', 1.0852392, 82.830444, True]\n"]}]},{"cell_type":"code","source":["dfa=pd.read_csv(\"Book2.csv\")"],"metadata":{"id":"0En6Gru_Ff36"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["list(dfa['(Uniswap V2: Router 2)'])\n","n=set()\n","for i in list(dfa['(Uniswap V2: Router 2)']):\n","  n.add(i)"],"metadata":{"id":"aPKg9BnTFf1r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["1inch v4: Router,ChainLink Token (LINK),USD Coin (USDC),Metamask: Swap Router,Dai Stablecoin (DAI),Tether USD (USDT),Wrapped BTC (WBTC)"],"metadata":{"id":"MVmjS0vFCsxN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"6UvPvH1LCx6O"}},{"cell_type":"code","source":["n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MwyPps8xFfzK","executionInfo":{"status":"ok","timestamp":1661616168054,"user_tz":-330,"elapsed":391,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"46bcf468-6435-42cc-db53-90af3c2f28e8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'(1inch v4: Router)',\n"," '(1inch v4: Router, None)',\n"," '(1inch v4: Router, Tether USD (USDT))',\n"," '(1inch v4: Router, USD Coin (USDC))',\n"," '(ChainLink Token (LINK))',\n"," '(ChainLink Token (LINK), None)',\n"," '(ChainLink Token (LINK), USD Coin (USDC))',\n"," '(Dai Stablecoin (DAI))',\n"," '(Dai Stablecoin (DAI), None)',\n"," '(Metamask: Swap Router)',\n"," '(Metamask: Swap Router, None)',\n"," '(None)',\n"," '(Tether USD (USDT))',\n"," '(Tether USD (USDT), Dai Stablecoin (DAI))',\n"," '(Tether USD (USDT), None)',\n"," '(Tether USD (USDT), USD Coin (USDC))',\n"," '(USD Coin (USDC))',\n"," '(USD Coin (USDC), Dai Stablecoin (DAI))',\n"," '(USD Coin (USDC), None)',\n"," '(Uniswap V2: Router 2, None)',\n"," '(Uniswap V2: Router 2, Tether USD (USDT))',\n"," '(Uniswap V2: Router 2, USD Coin (USDC))',\n"," '(Wrapped BTC (WBTC))',\n"," '(Wrapped BTC (WBTC), None)',\n"," '(Wrapped BTC (WBTC), Tether USD (USDT))',\n"," '(Wrapped BTC (WBTC), USD Coin (USDC))',\n"," '(Wrapped Ether)',\n"," '(Wrapped Ether, None)',\n"," '(Wrapped Ether, USD Coin (USDC))'}"]},"metadata":{},"execution_count":131}]},{"cell_type":"code","source":["file1 = open(\"asas.txt\",\"r\") \n","  \n","#print(\"Output of Read function is \")\n","d1=(file1.read())"],"metadata":{"id":"J7cuLIVFvztW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["d2=d1.split(\"~~~~~~\")"],"metadata":{"id":"FfDUGT9PPFoo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["len(d2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zjZMrOtoRt4Q","executionInfo":{"status":"ok","timestamp":1661603996258,"user_tz":-330,"elapsed":592,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"0443ad75-ff1a-4eb5-e752-62d91606cde3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["539"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["a1=d2[0].replace(\"\\'\",'\"')"],"metadata":{"id":"CbDpMt1LQbq6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a2=eval(a1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":408},"id":"QcauWIMqU9t4","executionInfo":{"status":"error","timestamp":1661604220632,"user_tz":-330,"elapsed":3715,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"62a2d238-eb12-4058-9107-8983f5cd2ecf"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["Traceback \u001b[0;36m(most recent call last)\u001b[0m:\n","  File \u001b[1;32m\"/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py\"\u001b[0m, line \u001b[1;32m3326\u001b[0m, in \u001b[1;35mrun_code\u001b[0m\n    exec(code_obj, self.user_global_ns, self.user_ns)\n","\u001b[0;36m  File \u001b[0;32m\"<ipython-input-16-dc64cef4cbce>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0;36m, in \u001b[0;35m<module>\u001b[0;36m\u001b[0m\n\u001b[0;31m    a2=eval(a1)\u001b[0m\n","\u001b[0;36m  File \u001b[0;32m\"<string>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    \"{\"data\": {\"address\": \"0x0a59649758aa4d66e25f08dd01271e891fe52199\", \"updated_at\": \"2022-08-27T09:16:31.714441351Z\", \"next_update_at\": \"2022-08-27T09:21:31.714441661Z\", \"quote_currency\": \"USD\", \"chain_id\": 1, \"items\": [{\"block_signed_at\": \"2022-08-27T08:47:21Z\", \"block_height\": 15420597, \"tx_hash\": \"0x12b41ee5b3c7129afa154ab359e1b07393ac2bc87aca32bfc40b61255b01b9e6\", \"tx_offset\": 77, \"successful\": True, \"from_address\": \"0xe9ae2d792f981c53ea7f6493a17abf5b2a45a86b\", \"from_address_label\": None, \"to_address\": \"0x9008d19f58aabd9ed0d60971565aa8510560ab41\", \"to_address_label\": None, \"value\": \"0\", \"value_quote\": 0.0, \"gas_offered\": 1385514, \"gas_spent\": 916288, \"gas_price\": 8434555210, \"fees_paid\": \"7728481724260480\", \"gas_quote\": 11.61128433906709, \"gas_quote_rate\": 1502.4017333984375, \"log_events\": [{\"block_signed_at\": \"2022-08-27T08:47:21Z\", \"block_height\": 15420597, \"tx_offset\": 77, \"log_offset\": 100, \"tx_hash\": \"0x12b41ee5b3c7129afa154ab359e1b07393ac2bc87aca32bfc40b61255b01b9e6\", \"raw_log_topics\": [\"0x40338ce1a7c49204f0099533b1e9a7ee0a3d261f84974ab7af36105b8c4e9db4\", \"0x000000000000000000000000e9ae2d792f981c53ea7f6493a17abf5b2a45a86b\"], \"sender_contract_decimals\": 0, \"sender_name\": None, \"sender_contract_ticker_symbol\": None, \"sender_address\": \"0x9008d19f58aabd9ed0d60971565aa8510560ab41\", \"sender_address_label\": None, \"sender_logo_url\": \"https://logos.covalenthq.com/tokens/1/0x9008d19f58aabd9ed0d60971565aa8510560ab41.png\", \"raw_log_data\": None, \"decoded\": {\"name\": \"...\n\u001b[0m          ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","source":["type(d2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qzJp3rvPT4bs","executionInfo":{"status":"ok","timestamp":1661604011462,"user_tz":-330,"elapsed":381,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"44d7059c-b0fb-479d-c940-ded847c28532"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["list"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["import json\n","for i in d2:\n","  op=eval(i)\n","  print(op.keys())\n","  break\n","  #ds[:20]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"7B-30KsUPmhU","executionInfo":{"status":"error","timestamp":1661603836281,"user_tz":-330,"elapsed":5532,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"247ebf0c-ce5c-4bfc-dbd4-f9977fe84c37"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["Traceback \u001b[0;36m(most recent call last)\u001b[0m:\n","  File \u001b[1;32m\"/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py\"\u001b[0m, line \u001b[1;32m3326\u001b[0m, in \u001b[1;35mrun_code\u001b[0m\n    exec(code_obj, self.user_global_ns, self.user_ns)\n","\u001b[0;36m  File \u001b[0;32m\"<ipython-input-19-70949dcb2984>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0;36m, in \u001b[0;35m<module>\u001b[0;36m\u001b[0m\n\u001b[0;31m    op=eval(i)\u001b[0m\n","\u001b[0;36m  File \u001b[0;32m\"<string>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    \"{'data': {'address': '0x0a59649758aa4d66e25f08dd01271e891fe52199', 'updated_at': '2022-08-27T09:16:31.714441351Z', 'next_update_at': '2022-08-27T09:21:31.714441661Z', 'quote_currency': 'USD', 'chain_id': 1, 'items': [{'block_signed_at': '2022-08-27T08:47:21Z', 'block_height': 15420597, 'tx_hash': '0x12b41ee5b3c7129afa154ab359e1b07393ac2bc87aca32bfc40b61255b01b9e6', 'tx_offset': 77, 'successful': True, 'from_address': '0xe9ae2d792f981c53ea7f6493a17abf5b2a45a86b', 'from_address_label': None, 'to_address': '0x9008d19f58aabd9ed0d60971565aa8510560ab41', 'to_address_label': None, 'value': '0', 'value_quote': 0.0, 'gas_offered': 1385514, 'gas_spent': 916288, 'gas_price': 8434555210, 'fees_paid': '7728481724260480', 'gas_quote': 11.61128433906709, 'gas_quote_rate': 1502.4017333984375, 'log_events': [{'block_signed_at': '2022-08-27T08:47:21Z', 'block_height': 15420597, 'tx_offset': 77, 'log_offset': 100, 'tx_hash': '0x12b41ee5b3c7129afa154ab359e1b07393ac2bc87aca32bfc40b61255b01b9e6', 'raw_log_topics': ['0x40338ce1a7c49204f0099533b1e9a7ee0a3d261f84974ab7af36105b8c4e9db4', '0x000000000000000000000000e9ae2d792f981c53ea7f6493a17abf5b2a45a86b'], 'sender_contract_decimals': 0, 'sender_name': None, 'sender_contract_ticker_symbol': None, 'sender_address': '0x9008d19f58aabd9ed0d60971565aa8510560ab41', 'sender_address_label': None, 'sender_logo_url': 'https://logos.covalenthq.com/tokens/1/0x9008d19f58aabd9ed0d60971565aa8510560ab41.png', 'raw_log_data': None, 'decoded': {'name': '...\n\u001b[0mn\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m EOL while scanning string literal\n"]}]},{"cell_type":"code","source":["print(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xspBD6_ij_YL","executionInfo":{"status":"ok","timestamp":1661591357786,"user_tz":-330,"elapsed":5,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"56c07b11-9589-4b0f-cab7-99222ade7800"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["IOPub data rate exceeded.\n","The notebook server will temporarily stop sending output\n","to the client in order to avoid crashing it.\n","To change this limit, set the config variable\n","`--NotebookApp.iopub_data_rate_limit`.\n","\n","Current values:\n","NotebookApp.iopub_data_rate_limit=1000000.0 (bytes/sec)\n","NotebookApp.rate_limit_window=3.0 (secs)\n","\n"]}]},{"cell_type":"code","source":["import json\n","\n","# Opening JSON file\n","f = open('asas.json')\n"],"metadata":{"id":"aAxbjrq6_npd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","\"token 1\",\"token 2\",\"price 1\",\"price2\",\"token used to swap\",\"sushi used\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":323},"id":"Bv5Ji8Nr_s6t","executionInfo":{"status":"error","timestamp":1661598641502,"user_tz":-330,"elapsed":9970,"user":{"displayName":"Tankala Yuvaraj","userId":"01548168716682217094"}},"outputId":"b442b613-de22-40fd-d5a4-4c63e72d98fc"},"execution_count":null,"outputs":[{"output_type":"error","ename":"JSONDecodeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mJSONDecodeError\u001b[0m                           Traceback (most recent call last)","\u001b[0;32m<ipython-input-126-fcbf6a517a67>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mjson\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/lib/python3.7/json/__init__.py\u001b[0m in \u001b[0;36mload\u001b[0;34m(fp, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\u001b[0m\n\u001b[1;32m    294\u001b[0m         \u001b[0mcls\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcls\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mobject_hook\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mobject_hook\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    295\u001b[0m         \u001b[0mparse_float\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparse_float\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparse_int\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparse_int\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 296\u001b[0;31m         parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\n\u001b[0m\u001b[1;32m    297\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    298\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/json/__init__.py\u001b[0m in \u001b[0;36mloads\u001b[0;34m(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\u001b[0m\n\u001b[1;32m    346\u001b[0m             \u001b[0mparse_int\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mparse_float\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    347\u001b[0m             parse_constant is None and object_pairs_hook is None and not kw):\n\u001b[0;32m--> 348\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_default_decoder\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    349\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcls\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    350\u001b[0m         \u001b[0mcls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mJSONDecoder\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/json/decoder.py\u001b[0m in \u001b[0;36mdecode\u001b[0;34m(self, s, _w)\u001b[0m\n\u001b[1;32m    338\u001b[0m         \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_w\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    339\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mend\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 340\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mJSONDecodeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Extra data\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    341\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    342\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mJSONDecodeError\u001b[0m: Extra data: line 1 column 6213264 (char 6213263)"]}]},{"cell_type":"code","source":[],"metadata":{"id":"RQTcO28eOOkj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"dyJ98jllONxE"},"execution_count":null,"outputs":[]}]}